syntax = "proto2";
package csmsg;

enum MSGID {
    CS_REQ_REGIST_ID = 1;
    CS_RES_REGIST_ID = 2;
    CS_REQ_LOGIN_ID = 3;
    CS_RES_LOGIN_ID = 4;
    CS_REQ_HELLO_ID=5;
    CS_RES_HELLO_ID=6;
    CS_REQ_CREATE_ROOM_ID=7;
    CS_RES_CREATE_ROOM_ID=8;
    CS_REQ_ROOM_LIST_ID=9;
    CS_RES_ROOM_LIST_ID=10;
    CS_REQ_QUIT_ROOM_ID=11;
    CS_RES_QUIT_ROOM_ID=12;
    CS_REQ_LOGINOUT_ID = 13;
    CS_RES_LOGINOUT_ID = 14;
    CS_NTY_LOGINOUT_ID = 16;
    CS_REQ_ENTER_ROOM_ID = 17;
    CS_RES_ENTER_ROOM_ID = 18;
    CS_NTY_ROOMINFO_UPDATE_ID = 20;
    CS_REQ_CHG_RACE_ID = 21;
    CS_RES_CHG_RACE_ID = 22;
  }

enum RACE {
    Deer = 0;
    Bear = 1;
    WOLF = 2;
  }

message Room_Info {
    enum STATUS {
        FREE = 0;
        NORMAL = 1;
        PREPAR = 2;
        PLAY = 3;
      }
    enum PLAYERSTATUS {
        PLAYER_NOPREPAR = 0;
        PLAYER_PREPAR = 1;
      }

    required int32 room_id = 1;
    repeated string user_list = 2;
    repeated RACE race_list = 3;
    required STATUS status = 4;
    repeated string online_list = 5;
}

message CS_REQ_REGIST {
  required string id = 1;
  required string passwd = 2;
}

message CS_RES_REGIST {
  enum Regist_Result {
      Suc = 0;
      Repeat = 1;
      System_Error = 2;
    }

  required Regist_Result result = 1;
}

message CS_REQ_LOGIN {
  required string id = 1;
  required string passwd = 2;
}

message CS_RES_LOGIN {
  enum Login_Result {
      Suc = 0;
      Passwd_Error = 1;
      Uid_Error = 2;
      Online_Full_Error = 3;
      System_Error = 4;
    }

  required Login_Result result = 1;
}

message CS_REQ_LOGINOUT {
  required string id = 1;
}

message CS_RES_LOGINOUT {
  enum Loginout_Result {
      Suc = 0;
      System_Error = 1;
    }

  required Loginout_Result result = 1;
}

message CS_NTY_LOGINOUT {
  enum Loginout_Reason {
      Login_Again = 0;
      Not_Login = 1;
      System_Error = 2;
    }

  required string id = 1;
  required Loginout_Reason Reason = 2;
}

message CS_REQ_HELLO {
  required string id = 1;
}

message CS_RES_HELLO {
  required int64 timenow = 1;
}

message CS_REQ_CREATE_ROOM {
  required string userid = 1;
}

message CS_RES_CREATE_ROOM {
  enum Login_Result {
      Suc = 0;
      Room_Full_Error = 1;
      System_Error = 2;
    }

  required Login_Result result = 1;
  required Room_Info room = 2;
}

message CS_REQ_ROOM_LIST {
  required string userid = 1;
}

message CS_RES_ROOM_LIST {
  enum ResultType {
      Suc = 0;
      System_Error = 1;
    }

  required ResultType result = 1;
  repeated Room_Info room_list = 2;
}

message CS_REQ_ENTER_ROOM {
  required string userid = 1;
  required int32 roomid = 2;
}

message CS_RES_ENTER_ROOM {
  enum ResultType {
      Suc = 0;
      RoomID_Error = 1;
      Room_Player_Full = 2;
      System_Error = 3;
    }

  required ResultType result = 1;
}

message CS_NTY_ROOMINFO_UPDATE {
  required Room_Info room = 1;
}

message CS_REQ_QUIT_ROOM {
  required string userid = 1;
  required int32 roomid = 2;
}

message CS_RES_QUIT_ROOM {
  enum ResultType {
      Suc = 0;
      User_No_In_Room = 1;
      RoomId_Error = 2;
      System_Error = 3;
    }

  required ResultType result = 1;
}

message CS_REQ_CHG_RACE {
  required string userid = 1;
  required int32 roomid = 2;
  required RACE race = 3;
}

message CS_RES_CHG_RACE {
  enum ResultType {
      Suc = 0;
      User_No_In_Room = 1;
      RoomId_Error = 2;
      System_Error = 3;
    }

  required ResultType result = 1;
}

message CS_REQ_MSG {
  required MSGID msgid = 1;

  oneof CS_MSG {
         CS_REQ_REGIST cs_req_regist = 2;
         CS_REQ_LOGIN cs_req_login = 3;
         CS_REQ_HELLO cs_req_hello = 4;
         CS_REQ_CREATE_ROOM cs_req_create_room = 5;
         CS_REQ_ROOM_LIST cs_req_room_list = 6;
         CS_REQ_QUIT_ROOM cs_req_quit_room = 7;
         CS_REQ_LOGINOUT cs_req_loginout = 8;
         CS_REQ_ENTER_ROOM cs_req_enter_room = 9;
         CS_REQ_CHG_RACE cs_req_chg_race = 10;
      }
}

message CS_RES_MSG {
  required MSGID msgid = 1;

  oneof CS_MSG {
         CS_RES_REGIST cs_res_regist = 2;
         CS_RES_LOGIN cs_res_login = 3;
         CS_RES_HELLO cs_res_hello = 4;
         CS_RES_CREATE_ROOM cs_res_create_room = 5;
         CS_RES_ROOM_LIST cs_res_room_list = 6;
         CS_RES_QUIT_ROOM cs_res_quit_room = 7;
         CS_RES_LOGINOUT cs_res_loginout = 8;
         CS_NTY_LOGINOUT cs_nty_loginout = 9;
         CS_RES_ENTER_ROOM cs_res_enter_room = 10;
         CS_NTY_ROOMINFO_UPDATE cs_nty_roominfo_update = 11;
         CS_RES_CHG_RACE cs_res_chg_race = 12;
      }
}
