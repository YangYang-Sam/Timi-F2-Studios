// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Csmsg
{

    /// <summary>Holder for reflection information generated from protocol.proto</summary>
    public static partial class ProtocolReflection
    {

        #region Descriptor
        /// <summary>File descriptor for protocol.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ProtocolReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg5wcm90b2NvbC5wcm90bxIFY3Ntc2cioQEKCVJvb21fSW5mbyIqCgZTVEFU",
                  "VVMSCAoERlJFRRAAEgwKCE1BVENISU5HEAESCAoEUExBWRACIjAKCkdBTUVT",
                  "VEFUVVMSEQoNR0FNRV9OT1BSRVBBUhAAEg8KC0dBTUVfUFJFUEFSEAEiNgoM",
                  "UExBWUVSU1RBVFVTEhMKD1BMQVlFUl9OT1BSRVBBUhAAEhEKDVBMQVlFUl9Q",
                  "UkVQQVIQASIrCg1DU19SRVFfUkVHSVNUEgoKAmlkGAEgASgJEg4KBnBhc3N3",
                  "ZBgCIAEoCSJ7Cg1DU19SRVNfUkVHSVNUEjIKBnJlc3VsdBgBIAEoDjIiLmNz",
                  "bXNnLkNTX1JFU19SRUdJU1QuUmVnaXN0X1Jlc3VsdCI2Cg1SZWdpc3RfUmVz",
                  "dWx0EgcKA1N1YxAAEgoKBlJlcGVhdBABEhAKDFN5c3RlbV9FcnJvchACIioK",
                  "DENTX1JFUV9MT0dJThIKCgJpZBgBIAEoCRIOCgZwYXNzd2QYAiABKAkiowEK",
                  "DENTX1JFU19MT0dJThIwCgZyZXN1bHQYASABKA4yIC5jc21zZy5DU19SRVNf",
                  "TE9HSU4uTG9naW5fUmVzdWx0ImEKDExvZ2luX1Jlc3VsdBIHCgNTdWMQABIQ",
                  "CgxQYXNzd2RfRXJyb3IQARINCglVaWRfRXJyb3IQAhIVChFPbmxpbmVfRnVs",
                  "bF9FcnJvchADEhAKDFN5c3RlbV9FcnJvchAEIh0KD0NTX1JFUV9MT0dJTk9V",
                  "VBIKCgJpZBgBIAEoCSJ3Cg9DU19SRVNfTE9HSU5PVVQSNgoGcmVzdWx0GAEg",
                  "ASgOMiYuY3Ntc2cuQ1NfUkVTX0xPR0lOT1VULkxvZ2lub3V0X1Jlc3VsdCIs",
                  "Cg9Mb2dpbm91dF9SZXN1bHQSBwoDU3VjEAASEAoMU3lzdGVtX0Vycm9yEAEi",
                  "mgEKD0NTX05UWV9MT0dJTk9VVBIKCgJpZBgBIAEoCRI2CgZSZWFzb24YAiAB",
                  "KA4yJi5jc21zZy5DU19OVFlfTE9HSU5PVVQuTG9naW5vdXRfUmVhc29uIkMK",
                  "D0xvZ2lub3V0X1JlYXNvbhIPCgtMb2dpbl9BZ2FpbhAAEg0KCU5vdF9Mb2dp",
                  "bhABEhAKDFN5c3RlbV9FcnJvchACIhoKDENTX1JFUV9IRUxMTxIKCgJpZBgB",
                  "IAEoCSIfCgxDU19SRVNfSEVMTE8SDwoHdGltZW5vdxgBIAEoAyIhCg9DU19S",
                  "RVFfTUFUQ0hJTkcSDgoGdXNlcmlkGAEgASgJIm0KD0NTX1JFU19NQVRDSElO",
                  "RxIxCgZyZXN1bHQYASABKA4yIS5jc21zZy5DU19SRVNfTUFUQ0hJTkcuUmVz",
                  "dWx0VHlwZSInCgpSZXN1bHRUeXBlEgcKA1N1YxAAEhAKDFN5c3RlbV9FcnJv",
                  "chABIqIBCg9DU19OVFlfTUFUQ0hJTkcSMQoGcmVzdWx0GAEgASgOMiEuY3Nt",
                  "c2cuQ1NfTlRZX01BVENISU5HLlJlc3VsdFR5cGUSEAoIdXNlcmxpc3QYAiAD",
                  "KAkiSgoKUmVzdWx0VHlwZRIHCgNTdWMQABIOCgpSb29tX0Vycm9yEAESEQoN",
                  "VGltZU91dF9FcnJvchACEhAKDFN5c3RlbV9FcnJvchADIiYKFENTX1JFUV9T",
                  "VE9QX01BVENISU5HEg4KBnVzZXJpZBgBIAEoCSKkAQoUQ1NfUkVTX1NUT1Bf",
                  "TUFUQ0hJTkcSNgoGcmVzdWx0GAEgASgOMiYuY3Ntc2cuQ1NfUkVTX1NUT1Bf",
                  "TUFUQ0hJTkcuUmVzdWx0VHlwZSJUCgpSZXN1bHRUeXBlEgcKA1N1YxAAEhUK",
                  "EU5PX01BVENISU5HX0VSUk9SEAESFAoQR0FNRV9TVEFSVF9FUlJPUhACEhAK",
                  "DFN5c3RlbV9FcnJvchADIiEKD0NTX1JFUV9HRVRfUkFDRRIOCgZ1c2VyaWQY",
                  "ASABKAkimgEKD0NTX1JFU19HRVRfUkFDRRIxCgZyZXN1bHQYASABKA4yIS5j",
                  "c21zZy5DU19SRVNfR0VUX1JBQ0UuUmVzdWx0VHlwZRIZCgRyYWNlGAIgASgO",
                  "MgsuY3Ntc2cuUkFDRSI5CgpSZXN1bHRUeXBlEgcKA1N1YxAAEhAKDFVzZXJJ",
                  "ZF9FcnJvchABEhAKDFN5c3RlbV9FcnJvchACIjwKD0NTX1JFUV9DSEdfUkFD",
                  "RRIOCgZ1c2VyaWQYASABKAkSGQoEcmFjZRgCIAEoDjILLmNzbXNnLlJBQ0Ui",
                  "fwoPQ1NfUkVTX0NIR19SQUNFEjEKBnJlc3VsdBgBIAEoDjIhLmNzbXNnLkNT",
                  "X1JFU19DSEdfUkFDRS5SZXN1bHRUeXBlIjkKClJlc3VsdFR5cGUSBwoDU3Vj",
                  "EAASEAoMVXNlcklkX0Vycm9yEAESEAoMU3lzdGVtX0Vycm9yEAIiOgoYQ1Nf",
                  "UkVRX0NIR19QTEFZRVJfU1RBVFVTEg4KBnVzZXJpZBgBIAEoCRIOCgZyb29t",
                  "aWQYAiABKAUiQgoYQ1NfUkVTX0NIR19QTEFZRVJfU1RBVFVTEiYKBnJlc3Vs",
                  "dBgBIAEoDjIWLmNzbXNnLkdhbWVfUmVzdWx0VHlwZSI6ChBDU19OVFlfRU5E",
                  "X1JPVU5EEiYKBnJlc3VsdBgBIAEoDjIWLmNzbXNnLkdhbWVfUmVzdWx0VHlw",
                  "ZSIyChFDU19SRVFfUExBWUVSX01PVhIOCgZ1c2VyaWQYASABKAkSDQoFcG9z",
                  "aWQYAiABKAUiOwoRQ1NfUkVTX1BMQVlFUl9NT1YSJgoGcmVzdWx0GAEgASgO",
                  "MhYuY3Ntc2cuR2FtZV9SZXN1bHRUeXBlIjIKEUNTX05UWV9QTEFZRVJfTU9W",
                  "Eg4KBnVzZXJpZBgBIAEoCRINCgVwb3NpZBgCIAEoBSI4ChZDU19SRVFfUExB",
                  "WUVSX1VTRV9DQVJEEg4KBnVzZXJpZBgBIAEoCRIOCgZjYXJkaWQYAiABKAUi",
                  "QAoWQ1NfUkVTX1BMQVlFUl9VU0VfQ0FSRBImCgZyZXN1bHQYASABKA4yFi5j",
                  "c21zZy5HYW1lX1Jlc3VsdFR5cGUiOAoWQ1NfTlRZX1BMQVlFUl9VU0VfQ0FS",
                  "RBIOCgZ1c2VyaWQYASABKAkSDgoGY2FyZGlkGAIgASgFInMKD0NTX1JFUV9H",
                  "QU1FX0VORBIOCgZ1c2VyaWQYASABKAkSMQoKZ2FtZVJlc3VsdBgCIAEoDjId",
                  "LmNzbXNnLkNTX1JFUV9HQU1FX0VORC5SZXN1bHQiHQoGUmVzdWx0EgcKA1N1",
                  "YxAAEgoKBkZhaWxlZBABIjkKD0NTX1JFU19HQU1FX0VORBImCgZyZXN1bHQY",
                  "ASABKA4yFi5jc21zZy5HYW1lX1Jlc3VsdFR5cGUifQoPQ1NfTlRZX0dBTUVf",
                  "RU5EEhIKCnN1Y191c2VyaWQYASABKAkSMQoKZ2FtZVJlc3VsdBgCIAEoDjId",
                  "LmNzbXNnLkNTX05UWV9HQU1FX0VORC5SZXN1bHQiIwoGUmVzdWx0EgcKA1N1",
                  "YxAAEhAKDFN5c3RlbV9FcnJvchABIooECgpDU19SRVFfTVNHEhsKBW1zZ2lk",
                  "GAEgASgOMgwuY3Ntc2cuTVNHSUQSLQoNY3NfcmVxX3JlZ2lzdBgCIAEoCzIU",
                  "LmNzbXNnLkNTX1JFUV9SRUdJU1RIABIrCgxjc19yZXFfbG9naW4YAyABKAsy",
                  "Ey5jc21zZy5DU19SRVFfTE9HSU5IABIrCgxjc19yZXFfaGVsbG8YBCABKAsy",
                  "Ey5jc21zZy5DU19SRVFfSEVMTE9IABIxCg9jc19yZXFfbG9naW5vdXQYBSAB",
                  "KAsyFi5jc21zZy5DU19SRVFfTE9HSU5PVVRIABIxCg9jc19yZXFfY2hnX3Jh",
                  "Y2UYBiABKAsyFi5jc21zZy5DU19SRVFfQ0hHX1JBQ0VIABIxCg9jc19yZXFf",
                  "bWF0Y2hpbmcYByABKAsyFi5jc21zZy5DU19SRVFfTUFUQ0hJTkdIABI7ChRj",
                  "c19yZXFfc3RvcF9tYXRjaGluZxgIIAEoCzIbLmNzbXNnLkNTX1JFUV9TVE9Q",
                  "X01BVENISU5HSAASMQoPY3NfcmVxX2dldF9yYWNlGAkgASgLMhYuY3Ntc2cu",
                  "Q1NfUkVRX0dFVF9SQUNFSAASQwoYY3NfcmVxX2NoZ19wbGF5ZXJfc3RhdHVz",
                  "GAogASgLMh8uY3Ntc2cuQ1NfUkVRX0NIR19QTEFZRVJfU1RBVFVTSABCCAoG",
                  "Q1NfTVNHItgFCgpDU19SRVNfTVNHEhsKBW1zZ2lkGAEgASgOMgwuY3Ntc2cu",
                  "TVNHSUQSLQoNY3NfcmVzX3JlZ2lzdBgCIAEoCzIULmNzbXNnLkNTX1JFU19S",
                  "RUdJU1RIABIrCgxjc19yZXNfbG9naW4YAyABKAsyEy5jc21zZy5DU19SRVNf",
                  "TE9HSU5IABIrCgxjc19yZXNfaGVsbG8YBCABKAsyEy5jc21zZy5DU19SRVNf",
                  "SEVMTE9IABIxCg9jc19yZXNfbG9naW5vdXQYBSABKAsyFi5jc21zZy5DU19S",
                  "RVNfTE9HSU5PVVRIABIxCg9jc19udHlfbG9naW5vdXQYBiABKAsyFi5jc21z",
                  "Zy5DU19OVFlfTE9HSU5PVVRIABIxCg9jc19udHlfbWF0Y2hpbmcYByABKAsy",
                  "Fi5jc21zZy5DU19OVFlfTUFUQ0hJTkdIABIxCg9jc19yZXNfY2hnX3JhY2UY",
                  "CCABKAsyFi5jc21zZy5DU19SRVNfQ0hHX1JBQ0VIABIxCg9jc19yZXNfbWF0",
                  "Y2hpbmcYCSABKAsyFi5jc21zZy5DU19SRVNfTUFUQ0hJTkdIABI7ChRjc19y",
                  "ZXNfc3RvcF9tYXRjaGluZxgKIAEoCzIbLmNzbXNnLkNTX1JFU19TVE9QX01B",
                  "VENISU5HSAASMQoPY3NfcmVzX2dldF9yYWNlGAsgASgLMhYuY3Ntc2cuQ1Nf",
                  "UkVTX0dFVF9SQUNFSAASQwoYY3NfcmVzX2NoZ19wbGF5ZXJfc3RhdHVzGAwg",
                  "ASgLMh8uY3Ntc2cuQ1NfUkVTX0NIR19QTEFZRVJfU1RBVFVTSAASMwoQY3Nf",
                  "bnR5X2VuZF9yb3VuZBgNIAEoCzIXLmNzbXNnLkNTX05UWV9FTkRfUk9VTkRI",
                  "ABIxCg9jc19udHlfZ2FtZV9lbmQYDiABKAsyFi5jc21zZy5DU19OVFlfR0FN",
                  "RV9FTkRIAEIICgZDU19NU0cqjAYKBU1TR0lEEgsKB05PX1VTRUQQABIUChBD",
                  "U19SRVFfUkVHSVNUX0lEEAESFAoQQ1NfUkVTX1JFR0lTVF9JRBACEhMKD0NT",
                  "X1JFUV9MT0dJTl9JRBADEhMKD0NTX1JFU19MT0dJTl9JRBAEEhMKD0NTX1JF",
                  "UV9IRUxMT19JRBAFEhMKD0NTX1JFU19IRUxMT19JRBAGEhYKEkNTX1JFUV9M",
                  "T0dJTk9VVF9JRBAHEhYKEkNTX1JFU19MT0dJTk9VVF9JRBAIEhYKEkNTX05U",
                  "WV9MT0dJTk9VVF9JRBAKEhYKEkNTX05UWV9NQVRDSElOR19JRBAMEhYKEkNT",
                  "X1JFUV9HRVRfUkFDRV9JRBANEhYKEkNTX1JFU19HRVRfUkFDRV9JRBAOEhYK",
                  "EkNTX1JFUV9DSEdfUkFDRV9JRBAPEhYKEkNTX1JFU19DSEdfUkFDRV9JRBAQ",
                  "EhYKEkNTX1JFUV9NQVRDSElOR19JRBAREhYKEkNTX1JFU19NQVRDSElOR19J",
                  "RBASEhsKF0NTX1JFUV9TVE9QX01BVENISU5HX0lEEBMSGwoXQ1NfUkVTX1NU",
                  "T1BfTUFUQ0hJTkdfSUQQFBIYChRDU19SRVFfUExBWUVSX01PVl9JRBAVEhgK",
                  "FENTX1JFU19QTEFZRVJfTU9WX0lEEBYSGAoUQ1NfTlRZX1BMQVlFUl9NT1Zf",
                  "SUQQGBIfChtDU19SRVFfQ0hHX1BMQVlFUl9TVEFUVVNfSUQQGRIfChtDU19S",
                  "RVNfQ0hHX1BMQVlFUl9TVEFUVVNfSUQQGhIXChNDU19OVFlfRU5EX1JPVU5E",
                  "X0lEEBwSHQoZQ1NfUkVRX1BMQVlFUl9VU0VfQ0FSRF9JRBAdEh0KGUNTX1JF",
                  "U19QTEFZRVJfVVNFX0NBUkRfSUQQHhIdChlDU19OVFlfUExBWUVSX1VTRV9D",
                  "QVJEX0lEECASFgoSQ1NfUkVRX0dBTUVfRU5EX0lEECESFgoSQ1NfUkVTX0dB",
                  "TUVfRU5EX0lEECISFgoSQ1NfTlRZX0dBTUVfRU5EX0lEECQqJAoEUkFDRRII",
                  "CgREZWVyEAASCAoEQmVhchABEggKBFdPTEYQAip+Cg9HYW1lX1Jlc3VsdFR5",
                  "cGUSBwoDU3VjEAASEwoPVXNlcl9Ob19Jbl9HYW1lEAESEwoPVXNlcl9Ob19J",
                  "bl9MaW5lEAISFAoQSGFkX1ByZXBhcl9FcnJvchADEhAKDFVzZXJJRF9FcnJv",
                  "chAEEhAKDFN5c3RlbV9FcnJvchAFYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::Csmsg.MSGID), typeof(global::Csmsg.RACE), typeof(global::Csmsg.Game_ResultType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.Room_Info), global::Csmsg.Room_Info.Parser, null, null, new[]{ typeof(global::Csmsg.Room_Info.Types.STATUS), typeof(global::Csmsg.Room_Info.Types.GAMESTATUS), typeof(global::Csmsg.Room_Info.Types.PLAYERSTATUS) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_REGIST), global::Csmsg.CS_REQ_REGIST.Parser, new[]{ "Id", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_REGIST), global::Csmsg.CS_RES_REGIST.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_REGIST.Types.Regist_Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_LOGIN), global::Csmsg.CS_REQ_LOGIN.Parser, new[]{ "Id", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_LOGIN), global::Csmsg.CS_RES_LOGIN.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_LOGIN.Types.Login_Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_LOGINOUT), global::Csmsg.CS_REQ_LOGINOUT.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_LOGINOUT), global::Csmsg.CS_RES_LOGINOUT.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_LOGINOUT), global::Csmsg.CS_NTY_LOGINOUT.Parser, new[]{ "Id", "Reason" }, null, new[]{ typeof(global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_HELLO), global::Csmsg.CS_REQ_HELLO.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_HELLO), global::Csmsg.CS_RES_HELLO.Parser, new[]{ "Timenow" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_MATCHING), global::Csmsg.CS_REQ_MATCHING.Parser, new[]{ "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_MATCHING), global::Csmsg.CS_RES_MATCHING.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_MATCHING.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_MATCHING), global::Csmsg.CS_NTY_MATCHING.Parser, new[]{ "Result", "Userlist" }, null, new[]{ typeof(global::Csmsg.CS_NTY_MATCHING.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_STOP_MATCHING), global::Csmsg.CS_REQ_STOP_MATCHING.Parser, new[]{ "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_STOP_MATCHING), global::Csmsg.CS_RES_STOP_MATCHING.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_GET_RACE), global::Csmsg.CS_REQ_GET_RACE.Parser, new[]{ "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_GET_RACE), global::Csmsg.CS_RES_GET_RACE.Parser, new[]{ "Result", "Race" }, null, new[]{ typeof(global::Csmsg.CS_RES_GET_RACE.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_CHG_RACE), global::Csmsg.CS_REQ_CHG_RACE.Parser, new[]{ "Userid", "Race" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_CHG_RACE), global::Csmsg.CS_RES_CHG_RACE.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_CHG_RACE.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_CHG_PLAYER_STATUS), global::Csmsg.CS_REQ_CHG_PLAYER_STATUS.Parser, new[]{ "Userid", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_CHG_PLAYER_STATUS), global::Csmsg.CS_RES_CHG_PLAYER_STATUS.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_END_ROUND), global::Csmsg.CS_NTY_END_ROUND.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_PLAYER_MOV), global::Csmsg.CS_REQ_PLAYER_MOV.Parser, new[]{ "Userid", "Posid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_PLAYER_MOV), global::Csmsg.CS_RES_PLAYER_MOV.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_PLAYER_MOV), global::Csmsg.CS_NTY_PLAYER_MOV.Parser, new[]{ "Userid", "Posid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_PLAYER_USE_CARD), global::Csmsg.CS_REQ_PLAYER_USE_CARD.Parser, new[]{ "Userid", "Cardid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_PLAYER_USE_CARD), global::Csmsg.CS_RES_PLAYER_USE_CARD.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_PLAYER_USE_CARD), global::Csmsg.CS_NTY_PLAYER_USE_CARD.Parser, new[]{ "Userid", "Cardid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_GAME_END), global::Csmsg.CS_REQ_GAME_END.Parser, new[]{ "Userid", "GameResult" }, null, new[]{ typeof(global::Csmsg.CS_REQ_GAME_END.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_GAME_END), global::Csmsg.CS_RES_GAME_END.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_GAME_END), global::Csmsg.CS_NTY_GAME_END.Parser, new[]{ "SucUserid", "GameResult" }, null, new[]{ typeof(global::Csmsg.CS_NTY_GAME_END.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_MSG), global::Csmsg.CS_REQ_MSG.Parser, new[]{ "Msgid", "CsReqRegist", "CsReqLogin", "CsReqHello", "CsReqLoginout", "CsReqChgRace", "CsReqMatching", "CsReqStopMatching", "CsReqGetRace", "CsReqChgPlayerStatus" }, new[]{ "CSMSG" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_MSG), global::Csmsg.CS_RES_MSG.Parser, new[]{ "Msgid", "CsResRegist", "CsResLogin", "CsResHello", "CsResLoginout", "CsNtyLoginout", "CsNtyMatching", "CsResChgRace", "CsResMatching", "CsResStopMatching", "CsResGetRace", "CsResChgPlayerStatus", "CsNtyEndRound", "CsNtyGameEnd" }, new[]{ "CSMSG" }, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    public enum MSGID
    {
        [pbr::OriginalName("NO_USED")] NoUsed = 0,
        [pbr::OriginalName("CS_REQ_REGIST_ID")] CsReqRegistId = 1,
        [pbr::OriginalName("CS_RES_REGIST_ID")] CsResRegistId = 2,
        [pbr::OriginalName("CS_REQ_LOGIN_ID")] CsReqLoginId = 3,
        [pbr::OriginalName("CS_RES_LOGIN_ID")] CsResLoginId = 4,
        [pbr::OriginalName("CS_REQ_HELLO_ID")] CsReqHelloId = 5,
        [pbr::OriginalName("CS_RES_HELLO_ID")] CsResHelloId = 6,
        [pbr::OriginalName("CS_REQ_LOGINOUT_ID")] CsReqLoginoutId = 7,
        [pbr::OriginalName("CS_RES_LOGINOUT_ID")] CsResLoginoutId = 8,
        [pbr::OriginalName("CS_NTY_LOGINOUT_ID")] CsNtyLoginoutId = 10,
        [pbr::OriginalName("CS_NTY_MATCHING_ID")] CsNtyMatchingId = 12,
        [pbr::OriginalName("CS_REQ_GET_RACE_ID")] CsReqGetRaceId = 13,
        [pbr::OriginalName("CS_RES_GET_RACE_ID")] CsResGetRaceId = 14,
        [pbr::OriginalName("CS_REQ_CHG_RACE_ID")] CsReqChgRaceId = 15,
        [pbr::OriginalName("CS_RES_CHG_RACE_ID")] CsResChgRaceId = 16,
        [pbr::OriginalName("CS_REQ_MATCHING_ID")] CsReqMatchingId = 17,
        [pbr::OriginalName("CS_RES_MATCHING_ID")] CsResMatchingId = 18,
        [pbr::OriginalName("CS_REQ_STOP_MATCHING_ID")] CsReqStopMatchingId = 19,
        [pbr::OriginalName("CS_RES_STOP_MATCHING_ID")] CsResStopMatchingId = 20,
        [pbr::OriginalName("CS_REQ_PLAYER_MOV_ID")] CsReqPlayerMovId = 21,
        [pbr::OriginalName("CS_RES_PLAYER_MOV_ID")] CsResPlayerMovId = 22,
        [pbr::OriginalName("CS_NTY_PLAYER_MOV_ID")] CsNtyPlayerMovId = 24,
        [pbr::OriginalName("CS_REQ_CHG_PLAYER_STATUS_ID")] CsReqChgPlayerStatusId = 25,
        [pbr::OriginalName("CS_RES_CHG_PLAYER_STATUS_ID")] CsResChgPlayerStatusId = 26,
        [pbr::OriginalName("CS_NTY_END_ROUND_ID")] CsNtyEndRoundId = 28,
        [pbr::OriginalName("CS_REQ_PLAYER_USE_CARD_ID")] CsReqPlayerUseCardId = 29,
        [pbr::OriginalName("CS_RES_PLAYER_USE_CARD_ID")] CsResPlayerUseCardId = 30,
        [pbr::OriginalName("CS_NTY_PLAYER_USE_CARD_ID")] CsNtyPlayerUseCardId = 32,
        [pbr::OriginalName("CS_REQ_GAME_END_ID")] CsReqGameEndId = 33,
        [pbr::OriginalName("CS_RES_GAME_END_ID")] CsResGameEndId = 34,
        [pbr::OriginalName("CS_NTY_GAME_END_ID")] CsNtyGameEndId = 36,
    }

    public enum RACE
    {
        [pbr::OriginalName("Deer")] Deer = 0,
        [pbr::OriginalName("Bear")] Bear = 1,
        [pbr::OriginalName("WOLF")] Wolf = 2,
    }

    public enum Game_ResultType
    {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("User_No_In_Game")] UserNoInGame = 1,
        [pbr::OriginalName("User_No_In_Line")] UserNoInLine = 2,
        [pbr::OriginalName("Had_Prepar_Error")] HadPreparError = 3,
        [pbr::OriginalName("UserID_Error")] UserIdError = 4,
        [pbr::OriginalName("System_Error")] SystemError = 5,
    }

    #endregion

    #region Messages
    public partial class Room_Info : pb::IMessage<Room_Info>, pb::ICleanable
    {
        private static readonly pb::MessageParser<Room_Info> _parser = new pb::MessageParser<Room_Info>(() => new Room_Info());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Room_Info> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Room_Info()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Room_Info(Room_Info other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Room_Info Clone()
        {
            return new Room_Info(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Room_Info);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Room_Info other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Room_Info other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Room_Info message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum STATUS
            {
                [pbr::OriginalName("FREE")] Free = 0,
                [pbr::OriginalName("MATCHING")] Matching = 1,
                [pbr::OriginalName("PLAY")] Play = 2,
            }

            public enum GAMESTATUS
            {
                [pbr::OriginalName("GAME_NOPREPAR")] GameNoprepar = 0,
                [pbr::OriginalName("GAME_PREPAR")] GamePrepar = 1,
            }

            public enum PLAYERSTATUS
            {
                [pbr::OriginalName("PLAYER_NOPREPAR")] PlayerNoprepar = 0,
                [pbr::OriginalName("PLAYER_PREPAR")] PlayerPrepar = 1,
            }

        }
        #endregion

    }

    public partial class CS_REQ_REGIST : pb::IMessage<CS_REQ_REGIST>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_REGIST> _parser = new pb::MessageParser<CS_REQ_REGIST>(() => new CS_REQ_REGIST());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_REGIST> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_REGIST()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_REGIST(CS_REQ_REGIST other) : this()
        {
            id_ = other.id_;
            passwd_ = other.passwd_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_REGIST Clone()
        {
            return new CS_REQ_REGIST(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "passwd" field.</summary>
        public const int PasswdFieldNumber = 2;
        private string passwd_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Passwd
        {
            get { return passwd_; }
            set
            {
                passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_REGIST);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_REGIST other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Passwd != other.Passwd) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (Passwd.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Passwd);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (Passwd.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_REGIST other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.Passwd.Length != 0)
            {
                Passwd = other.Passwd;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Passwd = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            id_ = null;
            passwd_ = null;
        }

    }

    public partial class CS_RES_REGIST : pb::IMessage<CS_RES_REGIST>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_REGIST> _parser = new pb::MessageParser<CS_RES_REGIST>(() => new CS_RES_REGIST());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_REGIST> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_REGIST()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_REGIST(CS_RES_REGIST other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_REGIST Clone()
        {
            return new CS_RES_REGIST(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_REGIST.Types.Regist_Result result_ = global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_REGIST.Types.Regist_Result Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_REGIST);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_REGIST other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_REGIST other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_REGIST.Types.Regist_Result)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_REGIST message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Regist_Result
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("Repeat")] Repeat = 1,
                [pbr::OriginalName("System_Error")] SystemError = 2,
            }

        }
        #endregion

    }

    public partial class CS_REQ_LOGIN : pb::IMessage<CS_REQ_LOGIN>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_LOGIN> _parser = new pb::MessageParser<CS_REQ_LOGIN>(() => new CS_REQ_LOGIN());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_LOGIN> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGIN()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGIN(CS_REQ_LOGIN other) : this()
        {
            id_ = other.id_;
            passwd_ = other.passwd_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGIN Clone()
        {
            return new CS_REQ_LOGIN(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "passwd" field.</summary>
        public const int PasswdFieldNumber = 2;
        private string passwd_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Passwd
        {
            get { return passwd_; }
            set
            {
                passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_LOGIN);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_LOGIN other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Passwd != other.Passwd) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (Passwd.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Passwd);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (Passwd.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_LOGIN other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.Passwd.Length != 0)
            {
                Passwd = other.Passwd;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Passwd = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            id_ = null;
            passwd_ = null;
        }

    }

    public partial class CS_RES_LOGIN : pb::IMessage<CS_RES_LOGIN>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_LOGIN> _parser = new pb::MessageParser<CS_RES_LOGIN>(() => new CS_RES_LOGIN());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_LOGIN> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGIN()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGIN(CS_RES_LOGIN other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGIN Clone()
        {
            return new CS_RES_LOGIN(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_LOGIN.Types.Login_Result result_ = global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_LOGIN.Types.Login_Result Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_LOGIN);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_LOGIN other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_LOGIN other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_LOGIN.Types.Login_Result)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_LOGIN message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Login_Result
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("Passwd_Error")] PasswdError = 1,
                [pbr::OriginalName("Uid_Error")] UidError = 2,
                [pbr::OriginalName("Online_Full_Error")] OnlineFullError = 3,
                [pbr::OriginalName("System_Error")] SystemError = 4,
            }

        }
        #endregion

    }

    public partial class CS_REQ_LOGINOUT : pb::IMessage<CS_REQ_LOGINOUT>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_LOGINOUT> _parser = new pb::MessageParser<CS_REQ_LOGINOUT>(() => new CS_REQ_LOGINOUT());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_LOGINOUT> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGINOUT()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGINOUT(CS_REQ_LOGINOUT other) : this()
        {
            id_ = other.id_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_LOGINOUT Clone()
        {
            return new CS_REQ_LOGINOUT(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_LOGINOUT);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_LOGINOUT other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_LOGINOUT other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            id_ = null;
        }

    }

    public partial class CS_RES_LOGINOUT : pb::IMessage<CS_RES_LOGINOUT>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_LOGINOUT> _parser = new pb::MessageParser<CS_RES_LOGINOUT>(() => new CS_RES_LOGINOUT());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_LOGINOUT> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGINOUT()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGINOUT(CS_RES_LOGINOUT other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_LOGINOUT Clone()
        {
            return new CS_RES_LOGINOUT(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result result_ = global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_LOGINOUT);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_LOGINOUT other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_LOGINOUT other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_LOGINOUT message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Loginout_Result
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("System_Error")] SystemError = 1,
            }

        }
        #endregion

    }

    public partial class CS_NTY_LOGINOUT : pb::IMessage<CS_NTY_LOGINOUT>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_LOGINOUT> _parser = new pb::MessageParser<CS_NTY_LOGINOUT>(() => new CS_NTY_LOGINOUT());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_LOGINOUT> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_LOGINOUT()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_LOGINOUT(CS_NTY_LOGINOUT other) : this()
        {
            id_ = other.id_;
            reason_ = other.reason_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_LOGINOUT Clone()
        {
            return new CS_NTY_LOGINOUT(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "Reason" field.</summary>
        public const int ReasonFieldNumber = 2;
        private global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason reason_ = global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason Reason
        {
            get { return reason_; }
            set
            {
                reason_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_LOGINOUT);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_LOGINOUT other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (Reason != other.Reason) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (Reason != global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain) hash ^= Reason.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (Reason != global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Reason);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (Reason != global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Reason);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_LOGINOUT other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.Reason != global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain)
            {
                Reason = other.Reason;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Reason = (global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            id_ = null;
            reason_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_NTY_LOGINOUT message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Loginout_Reason
            {
                [pbr::OriginalName("Login_Again")] LoginAgain = 0,
                [pbr::OriginalName("Not_Login")] NotLogin = 1,
                [pbr::OriginalName("System_Error")] SystemError = 2,
            }

        }
        #endregion

    }

    public partial class CS_REQ_HELLO : pb::IMessage<CS_REQ_HELLO>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_HELLO> _parser = new pb::MessageParser<CS_REQ_HELLO>(() => new CS_REQ_HELLO());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_HELLO> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_HELLO()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_HELLO(CS_REQ_HELLO other) : this()
        {
            id_ = other.id_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_HELLO Clone()
        {
            return new CS_REQ_HELLO(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_HELLO);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_HELLO other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_HELLO other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            id_ = null;
        }

    }

    public partial class CS_RES_HELLO : pb::IMessage<CS_RES_HELLO>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_HELLO> _parser = new pb::MessageParser<CS_RES_HELLO>(() => new CS_RES_HELLO());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_HELLO> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_HELLO()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_HELLO(CS_RES_HELLO other) : this()
        {
            timenow_ = other.timenow_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_HELLO Clone()
        {
            return new CS_RES_HELLO(this);
        }

        /// <summary>Field number for the "timenow" field.</summary>
        public const int TimenowFieldNumber = 1;
        private long timenow_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Timenow
        {
            get { return timenow_; }
            set
            {
                timenow_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_HELLO);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_HELLO other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Timenow != other.Timenow) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Timenow != 0L) hash ^= Timenow.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Timenow != 0L)
            {
                output.WriteRawTag(8);
                output.WriteInt64(Timenow);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Timenow != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timenow);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_HELLO other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Timenow != 0L)
            {
                Timenow = other.Timenow;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Timenow = input.ReadInt64();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            timenow_ = default;
        }

    }

    public partial class CS_REQ_MATCHING : pb::IMessage<CS_REQ_MATCHING>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_MATCHING> _parser = new pb::MessageParser<CS_REQ_MATCHING>(() => new CS_REQ_MATCHING());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_MATCHING> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MATCHING()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MATCHING(CS_REQ_MATCHING other) : this()
        {
            userid_ = other.userid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MATCHING Clone()
        {
            return new CS_REQ_MATCHING(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_MATCHING);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_MATCHING other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_MATCHING other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
        }

    }

    public partial class CS_RES_MATCHING : pb::IMessage<CS_RES_MATCHING>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_MATCHING> _parser = new pb::MessageParser<CS_RES_MATCHING>(() => new CS_RES_MATCHING());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_MATCHING> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MATCHING()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MATCHING(CS_RES_MATCHING other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MATCHING Clone()
        {
            return new CS_RES_MATCHING(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_MATCHING.Types.ResultType result_ = global::Csmsg.CS_RES_MATCHING.Types.ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_MATCHING.Types.ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_MATCHING);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_MATCHING other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_MATCHING.Types.ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_MATCHING.Types.ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_MATCHING.Types.ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_MATCHING other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_MATCHING.Types.ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_MATCHING.Types.ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_MATCHING message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ResultType
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("System_Error")] SystemError = 1,
            }

        }
        #endregion

    }

    public partial class CS_NTY_MATCHING : pb::IMessage<CS_NTY_MATCHING>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_MATCHING> _parser = new pb::MessageParser<CS_NTY_MATCHING>(() => new CS_NTY_MATCHING());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_MATCHING> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_MATCHING()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_MATCHING(CS_NTY_MATCHING other) : this()
        {
            result_ = other.result_;
            userlist_ = other.userlist_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_MATCHING Clone()
        {
            return new CS_NTY_MATCHING(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_NTY_MATCHING.Types.ResultType result_ = global::Csmsg.CS_NTY_MATCHING.Types.ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_MATCHING.Types.ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        /// <summary>Field number for the "userlist" field.</summary>
        public const int UserlistFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_userlist_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> userlist_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Userlist
        {
            get { return userlist_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_MATCHING);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_MATCHING other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            if (!userlist_.Equals(other.userlist_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_NTY_MATCHING.Types.ResultType.Suc) hash ^= Result.GetHashCode();
            hash ^= userlist_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_NTY_MATCHING.Types.ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            userlist_.WriteTo(output, _repeated_userlist_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_NTY_MATCHING.Types.ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            size += userlist_.CalculateSize(_repeated_userlist_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_MATCHING other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_NTY_MATCHING.Types.ResultType.Suc)
            {
                Result = other.Result;
            }
            userlist_.Add(other.userlist_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_NTY_MATCHING.Types.ResultType)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            userlist_.AddEntriesFrom(input, _repeated_userlist_codec);
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
            userlist_.Clear();
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_NTY_MATCHING message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ResultType
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("Room_Error")] RoomError = 1,
                [pbr::OriginalName("TimeOut_Error")] TimeOutError = 2,
                [pbr::OriginalName("System_Error")] SystemError = 3,
            }

        }
        #endregion

    }

    public partial class CS_REQ_STOP_MATCHING : pb::IMessage<CS_REQ_STOP_MATCHING>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_STOP_MATCHING> _parser = new pb::MessageParser<CS_REQ_STOP_MATCHING>(() => new CS_REQ_STOP_MATCHING());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_STOP_MATCHING> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_STOP_MATCHING()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_STOP_MATCHING(CS_REQ_STOP_MATCHING other) : this()
        {
            userid_ = other.userid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_STOP_MATCHING Clone()
        {
            return new CS_REQ_STOP_MATCHING(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_STOP_MATCHING);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_STOP_MATCHING other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_STOP_MATCHING other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
        }

    }

    public partial class CS_RES_STOP_MATCHING : pb::IMessage<CS_RES_STOP_MATCHING>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_STOP_MATCHING> _parser = new pb::MessageParser<CS_RES_STOP_MATCHING>(() => new CS_RES_STOP_MATCHING());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_STOP_MATCHING> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_STOP_MATCHING()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_STOP_MATCHING(CS_RES_STOP_MATCHING other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_STOP_MATCHING Clone()
        {
            return new CS_RES_STOP_MATCHING(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType result_ = global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_STOP_MATCHING);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_STOP_MATCHING other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_STOP_MATCHING other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_STOP_MATCHING.Types.ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_STOP_MATCHING message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ResultType
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("NO_MATCHING_ERROR")] NoMatchingError = 1,
                [pbr::OriginalName("GAME_START_ERROR")] GameStartError = 2,
                [pbr::OriginalName("System_Error")] SystemError = 3,
            }

        }
        #endregion

    }

    public partial class CS_REQ_GET_RACE : pb::IMessage<CS_REQ_GET_RACE>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_GET_RACE> _parser = new pb::MessageParser<CS_REQ_GET_RACE>(() => new CS_REQ_GET_RACE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_GET_RACE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GET_RACE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GET_RACE(CS_REQ_GET_RACE other) : this()
        {
            userid_ = other.userid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GET_RACE Clone()
        {
            return new CS_REQ_GET_RACE(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_GET_RACE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_GET_RACE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_GET_RACE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
        }

    }

    public partial class CS_RES_GET_RACE : pb::IMessage<CS_RES_GET_RACE>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_GET_RACE> _parser = new pb::MessageParser<CS_RES_GET_RACE>(() => new CS_RES_GET_RACE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_GET_RACE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GET_RACE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GET_RACE(CS_RES_GET_RACE other) : this()
        {
            result_ = other.result_;
            race_ = other.race_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GET_RACE Clone()
        {
            return new CS_RES_GET_RACE(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_GET_RACE.Types.ResultType result_ = global::Csmsg.CS_RES_GET_RACE.Types.ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_GET_RACE.Types.ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        /// <summary>Field number for the "race" field.</summary>
        public const int RaceFieldNumber = 2;
        private global::Csmsg.RACE race_ = global::Csmsg.RACE.Deer;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.RACE Race
        {
            get { return race_; }
            set
            {
                race_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_GET_RACE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_GET_RACE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            if (Race != other.Race) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_GET_RACE.Types.ResultType.Suc) hash ^= Result.GetHashCode();
            if (Race != global::Csmsg.RACE.Deer) hash ^= Race.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_GET_RACE.Types.ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (Race != global::Csmsg.RACE.Deer)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Race);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_GET_RACE.Types.ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (Race != global::Csmsg.RACE.Deer)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Race);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_GET_RACE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_GET_RACE.Types.ResultType.Suc)
            {
                Result = other.Result;
            }
            if (other.Race != global::Csmsg.RACE.Deer)
            {
                Race = other.Race;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_GET_RACE.Types.ResultType)input.ReadEnum();
                            break;
                        }
                    case 16:
                        {
                            Race = (global::Csmsg.RACE)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
            race_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_GET_RACE message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ResultType
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("UserId_Error")] UserIdError = 1,
                [pbr::OriginalName("System_Error")] SystemError = 2,
            }

        }
        #endregion

    }

    public partial class CS_REQ_CHG_RACE : pb::IMessage<CS_REQ_CHG_RACE>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_CHG_RACE> _parser = new pb::MessageParser<CS_REQ_CHG_RACE>(() => new CS_REQ_CHG_RACE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_CHG_RACE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_RACE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_RACE(CS_REQ_CHG_RACE other) : this()
        {
            userid_ = other.userid_;
            race_ = other.race_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_RACE Clone()
        {
            return new CS_REQ_CHG_RACE(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "race" field.</summary>
        public const int RaceFieldNumber = 2;
        private global::Csmsg.RACE race_ = global::Csmsg.RACE.Deer;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.RACE Race
        {
            get { return race_; }
            set
            {
                race_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_CHG_RACE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_CHG_RACE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Race != other.Race) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Race != global::Csmsg.RACE.Deer) hash ^= Race.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Race != global::Csmsg.RACE.Deer)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Race);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Race != global::Csmsg.RACE.Deer)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Race);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_CHG_RACE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Race != global::Csmsg.RACE.Deer)
            {
                Race = other.Race;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Race = (global::Csmsg.RACE)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            race_ = default;
        }

    }

    public partial class CS_RES_CHG_RACE : pb::IMessage<CS_RES_CHG_RACE>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_CHG_RACE> _parser = new pb::MessageParser<CS_RES_CHG_RACE>(() => new CS_RES_CHG_RACE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_CHG_RACE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_RACE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_RACE(CS_RES_CHG_RACE other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_RACE Clone()
        {
            return new CS_RES_CHG_RACE(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.CS_RES_CHG_RACE.Types.ResultType result_ = global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_CHG_RACE.Types.ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_CHG_RACE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_CHG_RACE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_CHG_RACE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.CS_RES_CHG_RACE.Types.ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_RES_CHG_RACE message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ResultType
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("UserId_Error")] UserIdError = 1,
                [pbr::OriginalName("System_Error")] SystemError = 2,
            }

        }
        #endregion

    }

    public partial class CS_REQ_CHG_PLAYER_STATUS : pb::IMessage<CS_REQ_CHG_PLAYER_STATUS>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_CHG_PLAYER_STATUS> _parser = new pb::MessageParser<CS_REQ_CHG_PLAYER_STATUS>(() => new CS_REQ_CHG_PLAYER_STATUS());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_CHG_PLAYER_STATUS> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_PLAYER_STATUS()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_PLAYER_STATUS(CS_REQ_CHG_PLAYER_STATUS other) : this()
        {
            userid_ = other.userid_;
            roomid_ = other.roomid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_CHG_PLAYER_STATUS Clone()
        {
            return new CS_REQ_CHG_PLAYER_STATUS(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "roomid" field.</summary>
        public const int RoomidFieldNumber = 2;
        private int roomid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Roomid
        {
            get { return roomid_; }
            set
            {
                roomid_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_CHG_PLAYER_STATUS);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_CHG_PLAYER_STATUS other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Roomid != other.Roomid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Roomid != 0) hash ^= Roomid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Roomid != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Roomid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Roomid != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_CHG_PLAYER_STATUS other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Roomid != 0)
            {
                Roomid = other.Roomid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Roomid = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            roomid_ = default;
        }

    }

    public partial class CS_RES_CHG_PLAYER_STATUS : pb::IMessage<CS_RES_CHG_PLAYER_STATUS>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_CHG_PLAYER_STATUS> _parser = new pb::MessageParser<CS_RES_CHG_PLAYER_STATUS>(() => new CS_RES_CHG_PLAYER_STATUS());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_CHG_PLAYER_STATUS> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_PLAYER_STATUS()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_PLAYER_STATUS(CS_RES_CHG_PLAYER_STATUS other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_CHG_PLAYER_STATUS Clone()
        {
            return new CS_RES_CHG_PLAYER_STATUS(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.Game_ResultType result_ = global::Csmsg.Game_ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.Game_ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_CHG_PLAYER_STATUS);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_CHG_PLAYER_STATUS other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.Game_ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_CHG_PLAYER_STATUS other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.Game_ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.Game_ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

    }

    public partial class CS_NTY_END_ROUND : pb::IMessage<CS_NTY_END_ROUND>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_END_ROUND> _parser = new pb::MessageParser<CS_NTY_END_ROUND>(() => new CS_NTY_END_ROUND());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_END_ROUND> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_END_ROUND()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_END_ROUND(CS_NTY_END_ROUND other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_END_ROUND Clone()
        {
            return new CS_NTY_END_ROUND(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.Game_ResultType result_ = global::Csmsg.Game_ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.Game_ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_END_ROUND);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_END_ROUND other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.Game_ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_END_ROUND other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.Game_ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.Game_ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

    }

    public partial class CS_REQ_PLAYER_MOV : pb::IMessage<CS_REQ_PLAYER_MOV>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_PLAYER_MOV> _parser = new pb::MessageParser<CS_REQ_PLAYER_MOV>(() => new CS_REQ_PLAYER_MOV());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_PLAYER_MOV> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_MOV()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_MOV(CS_REQ_PLAYER_MOV other) : this()
        {
            userid_ = other.userid_;
            posid_ = other.posid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_MOV Clone()
        {
            return new CS_REQ_PLAYER_MOV(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "posid" field.</summary>
        public const int PosidFieldNumber = 2;
        private int posid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Posid
        {
            get { return posid_; }
            set
            {
                posid_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_PLAYER_MOV);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_PLAYER_MOV other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Posid != other.Posid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Posid != 0) hash ^= Posid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Posid != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Posid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Posid != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_PLAYER_MOV other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Posid != 0)
            {
                Posid = other.Posid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Posid = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            posid_ = default;
        }

    }

    public partial class CS_RES_PLAYER_MOV : pb::IMessage<CS_RES_PLAYER_MOV>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_PLAYER_MOV> _parser = new pb::MessageParser<CS_RES_PLAYER_MOV>(() => new CS_RES_PLAYER_MOV());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_PLAYER_MOV> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_MOV()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_MOV(CS_RES_PLAYER_MOV other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_MOV Clone()
        {
            return new CS_RES_PLAYER_MOV(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.Game_ResultType result_ = global::Csmsg.Game_ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.Game_ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_PLAYER_MOV);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_PLAYER_MOV other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.Game_ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_PLAYER_MOV other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.Game_ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.Game_ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

    }

    public partial class CS_NTY_PLAYER_MOV : pb::IMessage<CS_NTY_PLAYER_MOV>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_PLAYER_MOV> _parser = new pb::MessageParser<CS_NTY_PLAYER_MOV>(() => new CS_NTY_PLAYER_MOV());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_PLAYER_MOV> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_MOV()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_MOV(CS_NTY_PLAYER_MOV other) : this()
        {
            userid_ = other.userid_;
            posid_ = other.posid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_MOV Clone()
        {
            return new CS_NTY_PLAYER_MOV(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "posid" field.</summary>
        public const int PosidFieldNumber = 2;
        private int posid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Posid
        {
            get { return posid_; }
            set
            {
                posid_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_PLAYER_MOV);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_PLAYER_MOV other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Posid != other.Posid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Posid != 0) hash ^= Posid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Posid != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Posid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Posid != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_PLAYER_MOV other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Posid != 0)
            {
                Posid = other.Posid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Posid = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            posid_ = default;
        }

    }

    public partial class CS_REQ_PLAYER_USE_CARD : pb::IMessage<CS_REQ_PLAYER_USE_CARD>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_PLAYER_USE_CARD> _parser = new pb::MessageParser<CS_REQ_PLAYER_USE_CARD>(() => new CS_REQ_PLAYER_USE_CARD());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_PLAYER_USE_CARD> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_USE_CARD()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_USE_CARD(CS_REQ_PLAYER_USE_CARD other) : this()
        {
            userid_ = other.userid_;
            cardid_ = other.cardid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_PLAYER_USE_CARD Clone()
        {
            return new CS_REQ_PLAYER_USE_CARD(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "cardid" field.</summary>
        public const int CardidFieldNumber = 2;
        private int cardid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Cardid
        {
            get { return cardid_; }
            set
            {
                cardid_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_PLAYER_USE_CARD);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_PLAYER_USE_CARD other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Cardid != other.Cardid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Cardid != 0) hash ^= Cardid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Cardid != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Cardid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Cardid != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_PLAYER_USE_CARD other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Cardid != 0)
            {
                Cardid = other.Cardid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Cardid = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            cardid_ = default;
        }

    }

    public partial class CS_RES_PLAYER_USE_CARD : pb::IMessage<CS_RES_PLAYER_USE_CARD>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_PLAYER_USE_CARD> _parser = new pb::MessageParser<CS_RES_PLAYER_USE_CARD>(() => new CS_RES_PLAYER_USE_CARD());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_PLAYER_USE_CARD> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_USE_CARD()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_USE_CARD(CS_RES_PLAYER_USE_CARD other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_PLAYER_USE_CARD Clone()
        {
            return new CS_RES_PLAYER_USE_CARD(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.Game_ResultType result_ = global::Csmsg.Game_ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.Game_ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_PLAYER_USE_CARD);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_PLAYER_USE_CARD other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.Game_ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_PLAYER_USE_CARD other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.Game_ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.Game_ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

    }

    public partial class CS_NTY_PLAYER_USE_CARD : pb::IMessage<CS_NTY_PLAYER_USE_CARD>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_PLAYER_USE_CARD> _parser = new pb::MessageParser<CS_NTY_PLAYER_USE_CARD>(() => new CS_NTY_PLAYER_USE_CARD());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_PLAYER_USE_CARD> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_USE_CARD()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_USE_CARD(CS_NTY_PLAYER_USE_CARD other) : this()
        {
            userid_ = other.userid_;
            cardid_ = other.cardid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_PLAYER_USE_CARD Clone()
        {
            return new CS_NTY_PLAYER_USE_CARD(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "cardid" field.</summary>
        public const int CardidFieldNumber = 2;
        private int cardid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Cardid
        {
            get { return cardid_; }
            set
            {
                cardid_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_PLAYER_USE_CARD);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_PLAYER_USE_CARD other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (Cardid != other.Cardid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (Cardid != 0) hash ^= Cardid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (Cardid != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Cardid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (Cardid != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cardid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_PLAYER_USE_CARD other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.Cardid != 0)
            {
                Cardid = other.Cardid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Cardid = input.ReadInt32();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            cardid_ = default;
        }

    }

    public partial class CS_REQ_GAME_END : pb::IMessage<CS_REQ_GAME_END>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_GAME_END> _parser = new pb::MessageParser<CS_REQ_GAME_END>(() => new CS_REQ_GAME_END());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_GAME_END> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GAME_END()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GAME_END(CS_REQ_GAME_END other) : this()
        {
            userid_ = other.userid_;
            gameResult_ = other.gameResult_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_GAME_END Clone()
        {
            return new CS_REQ_GAME_END(this);
        }

        /// <summary>Field number for the "userid" field.</summary>
        public const int UseridFieldNumber = 1;
        private string userid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Userid
        {
            get { return userid_; }
            set
            {
                userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "gameResult" field.</summary>
        public const int GameResultFieldNumber = 2;
        private global::Csmsg.CS_REQ_GAME_END.Types.Result gameResult_ = global::Csmsg.CS_REQ_GAME_END.Types.Result.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_GAME_END.Types.Result GameResult
        {
            get { return gameResult_; }
            set
            {
                gameResult_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_GAME_END);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_GAME_END other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Userid != other.Userid) return false;
            if (GameResult != other.GameResult) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Userid.Length != 0) hash ^= Userid.GetHashCode();
            if (GameResult != global::Csmsg.CS_REQ_GAME_END.Types.Result.Suc) hash ^= GameResult.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Userid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Userid);
            }
            if (GameResult != global::Csmsg.CS_REQ_GAME_END.Types.Result.Suc)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)GameResult);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Userid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
            }
            if (GameResult != global::Csmsg.CS_REQ_GAME_END.Types.Result.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)GameResult);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_GAME_END other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Userid.Length != 0)
            {
                Userid = other.Userid;
            }
            if (other.GameResult != global::Csmsg.CS_REQ_GAME_END.Types.Result.Suc)
            {
                GameResult = other.GameResult;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Userid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            GameResult = (global::Csmsg.CS_REQ_GAME_END.Types.Result)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            userid_ = null;
            gameResult_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_REQ_GAME_END message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Result
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("Failed")] Failed = 1,
            }

        }
        #endregion

    }

    public partial class CS_RES_GAME_END : pb::IMessage<CS_RES_GAME_END>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_GAME_END> _parser = new pb::MessageParser<CS_RES_GAME_END>(() => new CS_RES_GAME_END());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_GAME_END> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GAME_END()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GAME_END(CS_RES_GAME_END other) : this()
        {
            result_ = other.result_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_GAME_END Clone()
        {
            return new CS_RES_GAME_END(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private global::Csmsg.Game_ResultType result_ = global::Csmsg.Game_ResultType.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.Game_ResultType Result
        {
            get { return result_; }
            set
            {
                result_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_GAME_END);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_GAME_END other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Result != other.Result) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Result != global::Csmsg.Game_ResultType.Suc) hash ^= Result.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Result);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Result != global::Csmsg.Game_ResultType.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Result);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_GAME_END other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Result != global::Csmsg.Game_ResultType.Suc)
            {
                Result = other.Result;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Result = (global::Csmsg.Game_ResultType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            result_ = default;
        }

    }

    public partial class CS_NTY_GAME_END : pb::IMessage<CS_NTY_GAME_END>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_NTY_GAME_END> _parser = new pb::MessageParser<CS_NTY_GAME_END>(() => new CS_NTY_GAME_END());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_NTY_GAME_END> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_GAME_END()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_GAME_END(CS_NTY_GAME_END other) : this()
        {
            sucUserid_ = other.sucUserid_;
            gameResult_ = other.gameResult_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_NTY_GAME_END Clone()
        {
            return new CS_NTY_GAME_END(this);
        }

        /// <summary>Field number for the "suc_userid" field.</summary>
        public const int SucUseridFieldNumber = 1;
        private string sucUserid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SucUserid
        {
            get { return sucUserid_; }
            set
            {
                sucUserid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "gameResult" field.</summary>
        public const int GameResultFieldNumber = 2;
        private global::Csmsg.CS_NTY_GAME_END.Types.Result gameResult_ = global::Csmsg.CS_NTY_GAME_END.Types.Result.Suc;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_GAME_END.Types.Result GameResult
        {
            get { return gameResult_; }
            set
            {
                gameResult_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_NTY_GAME_END);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_NTY_GAME_END other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (SucUserid != other.SucUserid) return false;
            if (GameResult != other.GameResult) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (SucUserid.Length != 0) hash ^= SucUserid.GetHashCode();
            if (GameResult != global::Csmsg.CS_NTY_GAME_END.Types.Result.Suc) hash ^= GameResult.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (SucUserid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(SucUserid);
            }
            if (GameResult != global::Csmsg.CS_NTY_GAME_END.Types.Result.Suc)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)GameResult);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (SucUserid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SucUserid);
            }
            if (GameResult != global::Csmsg.CS_NTY_GAME_END.Types.Result.Suc)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)GameResult);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_NTY_GAME_END other)
        {
            if (other == null)
            {
                return;
            }
            if (other.SucUserid.Length != 0)
            {
                SucUserid = other.SucUserid;
            }
            if (other.GameResult != global::Csmsg.CS_NTY_GAME_END.Types.Result.Suc)
            {
                GameResult = other.GameResult;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            SucUserid = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            GameResult = (global::Csmsg.CS_NTY_GAME_END.Types.Result)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            sucUserid_ = null;
            gameResult_ = default;
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CS_NTY_GAME_END message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Result
            {
                [pbr::OriginalName("Suc")] Suc = 0,
                [pbr::OriginalName("System_Error")] SystemError = 1,
            }

        }
        #endregion

    }

    public partial class CS_REQ_MSG : pb::IMessage<CS_REQ_MSG>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_REQ_MSG> _parser = new pb::MessageParser<CS_REQ_MSG>(() => new CS_REQ_MSG());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_REQ_MSG> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MSG()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MSG(CS_REQ_MSG other) : this()
        {
            msgid_ = other.msgid_;
            switch (other.CSMSGCase)
            {
                case CSMSGOneofCase.CsReqRegist:
                    CsReqRegist = other.CsReqRegist.Clone();
                    break;
                case CSMSGOneofCase.CsReqLogin:
                    CsReqLogin = other.CsReqLogin.Clone();
                    break;
                case CSMSGOneofCase.CsReqHello:
                    CsReqHello = other.CsReqHello.Clone();
                    break;
                case CSMSGOneofCase.CsReqLoginout:
                    CsReqLoginout = other.CsReqLoginout.Clone();
                    break;
                case CSMSGOneofCase.CsReqChgRace:
                    CsReqChgRace = other.CsReqChgRace.Clone();
                    break;
                case CSMSGOneofCase.CsReqMatching:
                    CsReqMatching = other.CsReqMatching.Clone();
                    break;
                case CSMSGOneofCase.CsReqStopMatching:
                    CsReqStopMatching = other.CsReqStopMatching.Clone();
                    break;
                case CSMSGOneofCase.CsReqGetRace:
                    CsReqGetRace = other.CsReqGetRace.Clone();
                    break;
                case CSMSGOneofCase.CsReqChgPlayerStatus:
                    CsReqChgPlayerStatus = other.CsReqChgPlayerStatus.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_REQ_MSG Clone()
        {
            return new CS_REQ_MSG(this);
        }

        /// <summary>Field number for the "msgid" field.</summary>
        public const int MsgidFieldNumber = 1;
        private global::Csmsg.MSGID msgid_ = global::Csmsg.MSGID.NoUsed;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.MSGID Msgid
        {
            get { return msgid_; }
            set
            {
                msgid_ = value;
            }
        }

        /// <summary>Field number for the "cs_req_regist" field.</summary>
        public const int CsReqRegistFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_REGIST CsReqRegist
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqRegist ? (global::Csmsg.CS_REQ_REGIST)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqRegist;
            }
        }

        /// <summary>Field number for the "cs_req_login" field.</summary>
        public const int CsReqLoginFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_LOGIN CsReqLogin
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqLogin ? (global::Csmsg.CS_REQ_LOGIN)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqLogin;
            }
        }

        /// <summary>Field number for the "cs_req_hello" field.</summary>
        public const int CsReqHelloFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_HELLO CsReqHello
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqHello ? (global::Csmsg.CS_REQ_HELLO)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqHello;
            }
        }

        /// <summary>Field number for the "cs_req_loginout" field.</summary>
        public const int CsReqLoginoutFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_LOGINOUT CsReqLoginout
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqLoginout ? (global::Csmsg.CS_REQ_LOGINOUT)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqLoginout;
            }
        }

        /// <summary>Field number for the "cs_req_chg_race" field.</summary>
        public const int CsReqChgRaceFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_CHG_RACE CsReqChgRace
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqChgRace ? (global::Csmsg.CS_REQ_CHG_RACE)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqChgRace;
            }
        }

        /// <summary>Field number for the "cs_req_matching" field.</summary>
        public const int CsReqMatchingFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_MATCHING CsReqMatching
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqMatching ? (global::Csmsg.CS_REQ_MATCHING)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqMatching;
            }
        }

        /// <summary>Field number for the "cs_req_stop_matching" field.</summary>
        public const int CsReqStopMatchingFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_STOP_MATCHING CsReqStopMatching
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqStopMatching ? (global::Csmsg.CS_REQ_STOP_MATCHING)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqStopMatching;
            }
        }

        /// <summary>Field number for the "cs_req_get_race" field.</summary>
        public const int CsReqGetRaceFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_GET_RACE CsReqGetRace
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqGetRace ? (global::Csmsg.CS_REQ_GET_RACE)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqGetRace;
            }
        }

        /// <summary>Field number for the "cs_req_chg_player_status" field.</summary>
        public const int CsReqChgPlayerStatusFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_REQ_CHG_PLAYER_STATUS CsReqChgPlayerStatus
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsReqChgPlayerStatus ? (global::Csmsg.CS_REQ_CHG_PLAYER_STATUS)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqChgPlayerStatus;
            }
        }

        private object cSMSG_;
        /// <summary>Enum of possible cases for the "CS_MSG" oneof.</summary>
        public enum CSMSGOneofCase
        {
            None = 0,
            CsReqRegist = 2,
            CsReqLogin = 3,
            CsReqHello = 4,
            CsReqLoginout = 5,
            CsReqChgRace = 6,
            CsReqMatching = 7,
            CsReqStopMatching = 8,
            CsReqGetRace = 9,
            CsReqChgPlayerStatus = 10,
        }
        private CSMSGOneofCase cSMSGCase_ = CSMSGOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CSMSGOneofCase CSMSGCase
        {
            get { return cSMSGCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCSMSG()
        {
            cSMSGCase_ = CSMSGOneofCase.None;
            cSMSG_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_REQ_MSG);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_REQ_MSG other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Msgid != other.Msgid) return false;
            if (!object.Equals(CsReqRegist, other.CsReqRegist)) return false;
            if (!object.Equals(CsReqLogin, other.CsReqLogin)) return false;
            if (!object.Equals(CsReqHello, other.CsReqHello)) return false;
            if (!object.Equals(CsReqLoginout, other.CsReqLoginout)) return false;
            if (!object.Equals(CsReqChgRace, other.CsReqChgRace)) return false;
            if (!object.Equals(CsReqMatching, other.CsReqMatching)) return false;
            if (!object.Equals(CsReqStopMatching, other.CsReqStopMatching)) return false;
            if (!object.Equals(CsReqGetRace, other.CsReqGetRace)) return false;
            if (!object.Equals(CsReqChgPlayerStatus, other.CsReqChgPlayerStatus)) return false;
            if (CSMSGCase != other.CSMSGCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Msgid != global::Csmsg.MSGID.NoUsed) hash ^= Msgid.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) hash ^= CsReqRegist.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) hash ^= CsReqLogin.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) hash ^= CsReqHello.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) hash ^= CsReqLoginout.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) hash ^= CsReqChgRace.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqMatching) hash ^= CsReqMatching.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqStopMatching) hash ^= CsReqStopMatching.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqGetRace) hash ^= CsReqGetRace.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgPlayerStatus) hash ^= CsReqChgPlayerStatus.GetHashCode();
            hash ^= (int)cSMSGCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Msgid != global::Csmsg.MSGID.NoUsed)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Msgid);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist)
            {
                output.WriteRawTag(18);
                output.WriteMessage(CsReqRegist);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin)
            {
                output.WriteRawTag(26);
                output.WriteMessage(CsReqLogin);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello)
            {
                output.WriteRawTag(34);
                output.WriteMessage(CsReqHello);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout)
            {
                output.WriteRawTag(42);
                output.WriteMessage(CsReqLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace)
            {
                output.WriteRawTag(50);
                output.WriteMessage(CsReqChgRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqMatching)
            {
                output.WriteRawTag(58);
                output.WriteMessage(CsReqMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqStopMatching)
            {
                output.WriteRawTag(66);
                output.WriteMessage(CsReqStopMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqGetRace)
            {
                output.WriteRawTag(74);
                output.WriteMessage(CsReqGetRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgPlayerStatus)
            {
                output.WriteRawTag(82);
                output.WriteMessage(CsReqChgPlayerStatus);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Msgid != global::Csmsg.MSGID.NoUsed)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Msgid);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqRegist);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqLogin);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqHello);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqChgRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqMatching)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqStopMatching)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqStopMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqGetRace)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqGetRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgPlayerStatus)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqChgPlayerStatus);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_REQ_MSG other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Msgid != global::Csmsg.MSGID.NoUsed)
            {
                Msgid = other.Msgid;
            }
            switch (other.CSMSGCase)
            {
                case CSMSGOneofCase.CsReqRegist:
                    if (CsReqRegist == null)
                    {
                        CsReqRegist = new global::Csmsg.CS_REQ_REGIST();
                    }
                    CsReqRegist.MergeFrom(other.CsReqRegist);
                    break;
                case CSMSGOneofCase.CsReqLogin:
                    if (CsReqLogin == null)
                    {
                        CsReqLogin = new global::Csmsg.CS_REQ_LOGIN();
                    }
                    CsReqLogin.MergeFrom(other.CsReqLogin);
                    break;
                case CSMSGOneofCase.CsReqHello:
                    if (CsReqHello == null)
                    {
                        CsReqHello = new global::Csmsg.CS_REQ_HELLO();
                    }
                    CsReqHello.MergeFrom(other.CsReqHello);
                    break;
                case CSMSGOneofCase.CsReqLoginout:
                    if (CsReqLoginout == null)
                    {
                        CsReqLoginout = new global::Csmsg.CS_REQ_LOGINOUT();
                    }
                    CsReqLoginout.MergeFrom(other.CsReqLoginout);
                    break;
                case CSMSGOneofCase.CsReqChgRace:
                    if (CsReqChgRace == null)
                    {
                        CsReqChgRace = new global::Csmsg.CS_REQ_CHG_RACE();
                    }
                    CsReqChgRace.MergeFrom(other.CsReqChgRace);
                    break;
                case CSMSGOneofCase.CsReqMatching:
                    if (CsReqMatching == null)
                    {
                        CsReqMatching = new global::Csmsg.CS_REQ_MATCHING();
                    }
                    CsReqMatching.MergeFrom(other.CsReqMatching);
                    break;
                case CSMSGOneofCase.CsReqStopMatching:
                    if (CsReqStopMatching == null)
                    {
                        CsReqStopMatching = new global::Csmsg.CS_REQ_STOP_MATCHING();
                    }
                    CsReqStopMatching.MergeFrom(other.CsReqStopMatching);
                    break;
                case CSMSGOneofCase.CsReqGetRace:
                    if (CsReqGetRace == null)
                    {
                        CsReqGetRace = new global::Csmsg.CS_REQ_GET_RACE();
                    }
                    CsReqGetRace.MergeFrom(other.CsReqGetRace);
                    break;
                case CSMSGOneofCase.CsReqChgPlayerStatus:
                    if (CsReqChgPlayerStatus == null)
                    {
                        CsReqChgPlayerStatus = new global::Csmsg.CS_REQ_CHG_PLAYER_STATUS();
                    }
                    CsReqChgPlayerStatus.MergeFrom(other.CsReqChgPlayerStatus);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Msgid = (global::Csmsg.MSGID)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            global::Csmsg.CS_REQ_REGIST subBuilder = new global::Csmsg.CS_REQ_REGIST();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist)
                            {
                                subBuilder.MergeFrom(CsReqRegist);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqRegist = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Csmsg.CS_REQ_LOGIN subBuilder = new global::Csmsg.CS_REQ_LOGIN();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin)
                            {
                                subBuilder.MergeFrom(CsReqLogin);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqLogin = subBuilder;
                            break;
                        }
                    case 34:
                        {
                            global::Csmsg.CS_REQ_HELLO subBuilder = new global::Csmsg.CS_REQ_HELLO();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello)
                            {
                                subBuilder.MergeFrom(CsReqHello);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqHello = subBuilder;
                            break;
                        }
                    case 42:
                        {
                            global::Csmsg.CS_REQ_LOGINOUT subBuilder = new global::Csmsg.CS_REQ_LOGINOUT();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout)
                            {
                                subBuilder.MergeFrom(CsReqLoginout);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqLoginout = subBuilder;
                            break;
                        }
                    case 50:
                        {
                            global::Csmsg.CS_REQ_CHG_RACE subBuilder = new global::Csmsg.CS_REQ_CHG_RACE();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace)
                            {
                                subBuilder.MergeFrom(CsReqChgRace);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqChgRace = subBuilder;
                            break;
                        }
                    case 58:
                        {
                            global::Csmsg.CS_REQ_MATCHING subBuilder = new global::Csmsg.CS_REQ_MATCHING();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqMatching)
                            {
                                subBuilder.MergeFrom(CsReqMatching);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqMatching = subBuilder;
                            break;
                        }
                    case 66:
                        {
                            global::Csmsg.CS_REQ_STOP_MATCHING subBuilder = new global::Csmsg.CS_REQ_STOP_MATCHING();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqStopMatching)
                            {
                                subBuilder.MergeFrom(CsReqStopMatching);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqStopMatching = subBuilder;
                            break;
                        }
                    case 74:
                        {
                            global::Csmsg.CS_REQ_GET_RACE subBuilder = new global::Csmsg.CS_REQ_GET_RACE();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqGetRace)
                            {
                                subBuilder.MergeFrom(CsReqGetRace);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqGetRace = subBuilder;
                            break;
                        }
                    case 82:
                        {
                            global::Csmsg.CS_REQ_CHG_PLAYER_STATUS subBuilder = new global::Csmsg.CS_REQ_CHG_PLAYER_STATUS();
                            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgPlayerStatus)
                            {
                                subBuilder.MergeFrom(CsReqChgPlayerStatus);
                            }
                            input.ReadMessage(subBuilder);
                            CsReqChgPlayerStatus = subBuilder;
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            msgid_ = default;
        }

    }

    public partial class CS_RES_MSG : pb::IMessage<CS_RES_MSG>, pb::ICleanable
    {
        private static readonly pb::MessageParser<CS_RES_MSG> _parser = new pb::MessageParser<CS_RES_MSG>(() => new CS_RES_MSG());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CS_RES_MSG> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MSG()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MSG(CS_RES_MSG other) : this()
        {
            msgid_ = other.msgid_;
            switch (other.CSMSGCase)
            {
                case CSMSGOneofCase.CsResRegist:
                    CsResRegist = other.CsResRegist.Clone();
                    break;
                case CSMSGOneofCase.CsResLogin:
                    CsResLogin = other.CsResLogin.Clone();
                    break;
                case CSMSGOneofCase.CsResHello:
                    CsResHello = other.CsResHello.Clone();
                    break;
                case CSMSGOneofCase.CsResLoginout:
                    CsResLoginout = other.CsResLoginout.Clone();
                    break;
                case CSMSGOneofCase.CsNtyLoginout:
                    CsNtyLoginout = other.CsNtyLoginout.Clone();
                    break;
                case CSMSGOneofCase.CsNtyMatching:
                    CsNtyMatching = other.CsNtyMatching.Clone();
                    break;
                case CSMSGOneofCase.CsResChgRace:
                    CsResChgRace = other.CsResChgRace.Clone();
                    break;
                case CSMSGOneofCase.CsResMatching:
                    CsResMatching = other.CsResMatching.Clone();
                    break;
                case CSMSGOneofCase.CsResStopMatching:
                    CsResStopMatching = other.CsResStopMatching.Clone();
                    break;
                case CSMSGOneofCase.CsResGetRace:
                    CsResGetRace = other.CsResGetRace.Clone();
                    break;
                case CSMSGOneofCase.CsResChgPlayerStatus:
                    CsResChgPlayerStatus = other.CsResChgPlayerStatus.Clone();
                    break;
                case CSMSGOneofCase.CsNtyEndRound:
                    CsNtyEndRound = other.CsNtyEndRound.Clone();
                    break;
                case CSMSGOneofCase.CsNtyGameEnd:
                    CsNtyGameEnd = other.CsNtyGameEnd.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CS_RES_MSG Clone()
        {
            return new CS_RES_MSG(this);
        }

        /// <summary>Field number for the "msgid" field.</summary>
        public const int MsgidFieldNumber = 1;
        private global::Csmsg.MSGID msgid_ = global::Csmsg.MSGID.NoUsed;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.MSGID Msgid
        {
            get { return msgid_; }
            set
            {
                msgid_ = value;
            }
        }

        /// <summary>Field number for the "cs_res_regist" field.</summary>
        public const int CsResRegistFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_REGIST CsResRegist
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResRegist ? (global::Csmsg.CS_RES_REGIST)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResRegist;
            }
        }

        /// <summary>Field number for the "cs_res_login" field.</summary>
        public const int CsResLoginFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_LOGIN CsResLogin
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResLogin ? (global::Csmsg.CS_RES_LOGIN)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResLogin;
            }
        }

        /// <summary>Field number for the "cs_res_hello" field.</summary>
        public const int CsResHelloFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_HELLO CsResHello
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResHello ? (global::Csmsg.CS_RES_HELLO)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResHello;
            }
        }

        /// <summary>Field number for the "cs_res_loginout" field.</summary>
        public const int CsResLoginoutFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_LOGINOUT CsResLoginout
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResLoginout ? (global::Csmsg.CS_RES_LOGINOUT)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResLoginout;
            }
        }

        /// <summary>Field number for the "cs_nty_loginout" field.</summary>
        public const int CsNtyLoginoutFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_LOGINOUT CsNtyLoginout
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout ? (global::Csmsg.CS_NTY_LOGINOUT)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyLoginout;
            }
        }

        /// <summary>Field number for the "cs_nty_matching" field.</summary>
        public const int CsNtyMatchingFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_MATCHING CsNtyMatching
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsNtyMatching ? (global::Csmsg.CS_NTY_MATCHING)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyMatching;
            }
        }

        /// <summary>Field number for the "cs_res_chg_race" field.</summary>
        public const int CsResChgRaceFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_CHG_RACE CsResChgRace
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResChgRace ? (global::Csmsg.CS_RES_CHG_RACE)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResChgRace;
            }
        }

        /// <summary>Field number for the "cs_res_matching" field.</summary>
        public const int CsResMatchingFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_MATCHING CsResMatching
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResMatching ? (global::Csmsg.CS_RES_MATCHING)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResMatching;
            }
        }

        /// <summary>Field number for the "cs_res_stop_matching" field.</summary>
        public const int CsResStopMatchingFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_STOP_MATCHING CsResStopMatching
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResStopMatching ? (global::Csmsg.CS_RES_STOP_MATCHING)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResStopMatching;
            }
        }

        /// <summary>Field number for the "cs_res_get_race" field.</summary>
        public const int CsResGetRaceFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_GET_RACE CsResGetRace
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResGetRace ? (global::Csmsg.CS_RES_GET_RACE)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResGetRace;
            }
        }

        /// <summary>Field number for the "cs_res_chg_player_status" field.</summary>
        public const int CsResChgPlayerStatusFieldNumber = 12;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_RES_CHG_PLAYER_STATUS CsResChgPlayerStatus
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsResChgPlayerStatus ? (global::Csmsg.CS_RES_CHG_PLAYER_STATUS)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResChgPlayerStatus;
            }
        }

        /// <summary>Field number for the "cs_nty_end_round" field.</summary>
        public const int CsNtyEndRoundFieldNumber = 13;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_END_ROUND CsNtyEndRound
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsNtyEndRound ? (global::Csmsg.CS_NTY_END_ROUND)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyEndRound;
            }
        }

        /// <summary>Field number for the "cs_nty_game_end" field.</summary>
        public const int CsNtyGameEndFieldNumber = 14;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Csmsg.CS_NTY_GAME_END CsNtyGameEnd
        {
            get { return cSMSGCase_ == CSMSGOneofCase.CsNtyGameEnd ? (global::Csmsg.CS_NTY_GAME_END)cSMSG_ : null; }
            set
            {
                cSMSG_ = value;
                cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyGameEnd;
            }
        }

        private object cSMSG_;
        /// <summary>Enum of possible cases for the "CS_MSG" oneof.</summary>
        public enum CSMSGOneofCase
        {
            None = 0,
            CsResRegist = 2,
            CsResLogin = 3,
            CsResHello = 4,
            CsResLoginout = 5,
            CsNtyLoginout = 6,
            CsNtyMatching = 7,
            CsResChgRace = 8,
            CsResMatching = 9,
            CsResStopMatching = 10,
            CsResGetRace = 11,
            CsResChgPlayerStatus = 12,
            CsNtyEndRound = 13,
            CsNtyGameEnd = 14,
        }
        private CSMSGOneofCase cSMSGCase_ = CSMSGOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CSMSGOneofCase CSMSGCase
        {
            get { return cSMSGCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCSMSG()
        {
            cSMSGCase_ = CSMSGOneofCase.None;
            cSMSG_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CS_RES_MSG);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CS_RES_MSG other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Msgid != other.Msgid) return false;
            if (!object.Equals(CsResRegist, other.CsResRegist)) return false;
            if (!object.Equals(CsResLogin, other.CsResLogin)) return false;
            if (!object.Equals(CsResHello, other.CsResHello)) return false;
            if (!object.Equals(CsResLoginout, other.CsResLoginout)) return false;
            if (!object.Equals(CsNtyLoginout, other.CsNtyLoginout)) return false;
            if (!object.Equals(CsNtyMatching, other.CsNtyMatching)) return false;
            if (!object.Equals(CsResChgRace, other.CsResChgRace)) return false;
            if (!object.Equals(CsResMatching, other.CsResMatching)) return false;
            if (!object.Equals(CsResStopMatching, other.CsResStopMatching)) return false;
            if (!object.Equals(CsResGetRace, other.CsResGetRace)) return false;
            if (!object.Equals(CsResChgPlayerStatus, other.CsResChgPlayerStatus)) return false;
            if (!object.Equals(CsNtyEndRound, other.CsNtyEndRound)) return false;
            if (!object.Equals(CsNtyGameEnd, other.CsNtyGameEnd)) return false;
            if (CSMSGCase != other.CSMSGCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Msgid != global::Csmsg.MSGID.NoUsed) hash ^= Msgid.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) hash ^= CsResRegist.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) hash ^= CsResLogin.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResHello) hash ^= CsResHello.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) hash ^= CsResLoginout.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) hash ^= CsNtyLoginout.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyMatching) hash ^= CsNtyMatching.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) hash ^= CsResChgRace.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResMatching) hash ^= CsResMatching.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResStopMatching) hash ^= CsResStopMatching.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResGetRace) hash ^= CsResGetRace.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgPlayerStatus) hash ^= CsResChgPlayerStatus.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyEndRound) hash ^= CsNtyEndRound.GetHashCode();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyGameEnd) hash ^= CsNtyGameEnd.GetHashCode();
            hash ^= (int)cSMSGCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Msgid != global::Csmsg.MSGID.NoUsed)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Msgid);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist)
            {
                output.WriteRawTag(18);
                output.WriteMessage(CsResRegist);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin)
            {
                output.WriteRawTag(26);
                output.WriteMessage(CsResLogin);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResHello)
            {
                output.WriteRawTag(34);
                output.WriteMessage(CsResHello);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout)
            {
                output.WriteRawTag(42);
                output.WriteMessage(CsResLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout)
            {
                output.WriteRawTag(50);
                output.WriteMessage(CsNtyLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyMatching)
            {
                output.WriteRawTag(58);
                output.WriteMessage(CsNtyMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace)
            {
                output.WriteRawTag(66);
                output.WriteMessage(CsResChgRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResMatching)
            {
                output.WriteRawTag(74);
                output.WriteMessage(CsResMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResStopMatching)
            {
                output.WriteRawTag(82);
                output.WriteMessage(CsResStopMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResGetRace)
            {
                output.WriteRawTag(90);
                output.WriteMessage(CsResGetRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgPlayerStatus)
            {
                output.WriteRawTag(98);
                output.WriteMessage(CsResChgPlayerStatus);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyEndRound)
            {
                output.WriteRawTag(106);
                output.WriteMessage(CsNtyEndRound);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyGameEnd)
            {
                output.WriteRawTag(114);
                output.WriteMessage(CsNtyGameEnd);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Msgid != global::Csmsg.MSGID.NoUsed)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Msgid);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResRegist);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResLogin);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResHello)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResHello);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyLoginout);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyMatching)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResChgRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResMatching)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResStopMatching)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResStopMatching);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResGetRace)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResGetRace);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgPlayerStatus)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResChgPlayerStatus);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyEndRound)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyEndRound);
            }
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyGameEnd)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyGameEnd);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CS_RES_MSG other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Msgid != global::Csmsg.MSGID.NoUsed)
            {
                Msgid = other.Msgid;
            }
            switch (other.CSMSGCase)
            {
                case CSMSGOneofCase.CsResRegist:
                    if (CsResRegist == null)
                    {
                        CsResRegist = new global::Csmsg.CS_RES_REGIST();
                    }
                    CsResRegist.MergeFrom(other.CsResRegist);
                    break;
                case CSMSGOneofCase.CsResLogin:
                    if (CsResLogin == null)
                    {
                        CsResLogin = new global::Csmsg.CS_RES_LOGIN();
                    }
                    CsResLogin.MergeFrom(other.CsResLogin);
                    break;
                case CSMSGOneofCase.CsResHello:
                    if (CsResHello == null)
                    {
                        CsResHello = new global::Csmsg.CS_RES_HELLO();
                    }
                    CsResHello.MergeFrom(other.CsResHello);
                    break;
                case CSMSGOneofCase.CsResLoginout:
                    if (CsResLoginout == null)
                    {
                        CsResLoginout = new global::Csmsg.CS_RES_LOGINOUT();
                    }
                    CsResLoginout.MergeFrom(other.CsResLoginout);
                    break;
                case CSMSGOneofCase.CsNtyLoginout:
                    if (CsNtyLoginout == null)
                    {
                        CsNtyLoginout = new global::Csmsg.CS_NTY_LOGINOUT();
                    }
                    CsNtyLoginout.MergeFrom(other.CsNtyLoginout);
                    break;
                case CSMSGOneofCase.CsNtyMatching:
                    if (CsNtyMatching == null)
                    {
                        CsNtyMatching = new global::Csmsg.CS_NTY_MATCHING();
                    }
                    CsNtyMatching.MergeFrom(other.CsNtyMatching);
                    break;
                case CSMSGOneofCase.CsResChgRace:
                    if (CsResChgRace == null)
                    {
                        CsResChgRace = new global::Csmsg.CS_RES_CHG_RACE();
                    }
                    CsResChgRace.MergeFrom(other.CsResChgRace);
                    break;
                case CSMSGOneofCase.CsResMatching:
                    if (CsResMatching == null)
                    {
                        CsResMatching = new global::Csmsg.CS_RES_MATCHING();
                    }
                    CsResMatching.MergeFrom(other.CsResMatching);
                    break;
                case CSMSGOneofCase.CsResStopMatching:
                    if (CsResStopMatching == null)
                    {
                        CsResStopMatching = new global::Csmsg.CS_RES_STOP_MATCHING();
                    }
                    CsResStopMatching.MergeFrom(other.CsResStopMatching);
                    break;
                case CSMSGOneofCase.CsResGetRace:
                    if (CsResGetRace == null)
                    {
                        CsResGetRace = new global::Csmsg.CS_RES_GET_RACE();
                    }
                    CsResGetRace.MergeFrom(other.CsResGetRace);
                    break;
                case CSMSGOneofCase.CsResChgPlayerStatus:
                    if (CsResChgPlayerStatus == null)
                    {
                        CsResChgPlayerStatus = new global::Csmsg.CS_RES_CHG_PLAYER_STATUS();
                    }
                    CsResChgPlayerStatus.MergeFrom(other.CsResChgPlayerStatus);
                    break;
                case CSMSGOneofCase.CsNtyEndRound:
                    if (CsNtyEndRound == null)
                    {
                        CsNtyEndRound = new global::Csmsg.CS_NTY_END_ROUND();
                    }
                    CsNtyEndRound.MergeFrom(other.CsNtyEndRound);
                    break;
                case CSMSGOneofCase.CsNtyGameEnd:
                    if (CsNtyGameEnd == null)
                    {
                        CsNtyGameEnd = new global::Csmsg.CS_NTY_GAME_END();
                    }
                    CsNtyGameEnd.MergeFrom(other.CsNtyGameEnd);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Msgid = (global::Csmsg.MSGID)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            global::Csmsg.CS_RES_REGIST subBuilder = new global::Csmsg.CS_RES_REGIST();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist)
                            {
                                subBuilder.MergeFrom(CsResRegist);
                            }
                            input.ReadMessage(subBuilder);
                            CsResRegist = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Csmsg.CS_RES_LOGIN subBuilder = new global::Csmsg.CS_RES_LOGIN();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin)
                            {
                                subBuilder.MergeFrom(CsResLogin);
                            }
                            input.ReadMessage(subBuilder);
                            CsResLogin = subBuilder;
                            break;
                        }
                    case 34:
                        {
                            global::Csmsg.CS_RES_HELLO subBuilder = new global::Csmsg.CS_RES_HELLO();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResHello)
                            {
                                subBuilder.MergeFrom(CsResHello);
                            }
                            input.ReadMessage(subBuilder);
                            CsResHello = subBuilder;
                            break;
                        }
                    case 42:
                        {
                            global::Csmsg.CS_RES_LOGINOUT subBuilder = new global::Csmsg.CS_RES_LOGINOUT();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout)
                            {
                                subBuilder.MergeFrom(CsResLoginout);
                            }
                            input.ReadMessage(subBuilder);
                            CsResLoginout = subBuilder;
                            break;
                        }
                    case 50:
                        {
                            global::Csmsg.CS_NTY_LOGINOUT subBuilder = new global::Csmsg.CS_NTY_LOGINOUT();
                            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout)
                            {
                                subBuilder.MergeFrom(CsNtyLoginout);
                            }
                            input.ReadMessage(subBuilder);
                            CsNtyLoginout = subBuilder;
                            break;
                        }
                    case 58:
                        {
                            global::Csmsg.CS_NTY_MATCHING subBuilder = new global::Csmsg.CS_NTY_MATCHING();
                            if (cSMSGCase_ == CSMSGOneofCase.CsNtyMatching)
                            {
                                subBuilder.MergeFrom(CsNtyMatching);
                            }
                            input.ReadMessage(subBuilder);
                            CsNtyMatching = subBuilder;
                            break;
                        }
                    case 66:
                        {
                            global::Csmsg.CS_RES_CHG_RACE subBuilder = new global::Csmsg.CS_RES_CHG_RACE();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace)
                            {
                                subBuilder.MergeFrom(CsResChgRace);
                            }
                            input.ReadMessage(subBuilder);
                            CsResChgRace = subBuilder;
                            break;
                        }
                    case 74:
                        {
                            global::Csmsg.CS_RES_MATCHING subBuilder = new global::Csmsg.CS_RES_MATCHING();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResMatching)
                            {
                                subBuilder.MergeFrom(CsResMatching);
                            }
                            input.ReadMessage(subBuilder);
                            CsResMatching = subBuilder;
                            break;
                        }
                    case 82:
                        {
                            global::Csmsg.CS_RES_STOP_MATCHING subBuilder = new global::Csmsg.CS_RES_STOP_MATCHING();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResStopMatching)
                            {
                                subBuilder.MergeFrom(CsResStopMatching);
                            }
                            input.ReadMessage(subBuilder);
                            CsResStopMatching = subBuilder;
                            break;
                        }
                    case 90:
                        {
                            global::Csmsg.CS_RES_GET_RACE subBuilder = new global::Csmsg.CS_RES_GET_RACE();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResGetRace)
                            {
                                subBuilder.MergeFrom(CsResGetRace);
                            }
                            input.ReadMessage(subBuilder);
                            CsResGetRace = subBuilder;
                            break;
                        }
                    case 98:
                        {
                            global::Csmsg.CS_RES_CHG_PLAYER_STATUS subBuilder = new global::Csmsg.CS_RES_CHG_PLAYER_STATUS();
                            if (cSMSGCase_ == CSMSGOneofCase.CsResChgPlayerStatus)
                            {
                                subBuilder.MergeFrom(CsResChgPlayerStatus);
                            }
                            input.ReadMessage(subBuilder);
                            CsResChgPlayerStatus = subBuilder;
                            break;
                        }
                    case 106:
                        {
                            global::Csmsg.CS_NTY_END_ROUND subBuilder = new global::Csmsg.CS_NTY_END_ROUND();
                            if (cSMSGCase_ == CSMSGOneofCase.CsNtyEndRound)
                            {
                                subBuilder.MergeFrom(CsNtyEndRound);
                            }
                            input.ReadMessage(subBuilder);
                            CsNtyEndRound = subBuilder;
                            break;
                        }
                    case 114:
                        {
                            global::Csmsg.CS_NTY_GAME_END subBuilder = new global::Csmsg.CS_NTY_GAME_END();
                            if (cSMSGCase_ == CSMSGOneofCase.CsNtyGameEnd)
                            {
                                subBuilder.MergeFrom(CsNtyGameEnd);
                            }
                            input.ReadMessage(subBuilder);
                            CsNtyGameEnd = subBuilder;
                            break;
                        }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void CleanMessage()
        {
            msgid_ = default;
        }

    }

    #endregion

}

#endregion Designer generated code
