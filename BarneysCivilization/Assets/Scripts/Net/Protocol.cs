// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Csmsg {

  /// <summary>Holder for reflection information generated from protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5wcm90b2NvbC5wcm90bxIFY3Ntc2ci+wEKCVJvb21fSW5mbxIPCgdyb29t",
            "X2lkGAEgAigFEhEKCXVzZXJfbGlzdBgCIAMoCRIeCglyYWNlX2xpc3QYAyAD",
            "KA4yCy5jc21zZy5SQUNFEicKBnN0YXR1cxgEIAIoDjIXLmNzbXNnLlJvb21f",
            "SW5mby5TVEFUVVMSEwoLb25saW5lX2xpc3QYBSADKAkiNAoGU1RBVFVTEggK",
            "BEZSRUUQABIKCgZOT1JNQUwQARIKCgZQUkVQQVIQAhIICgRQTEFZEAMiNgoM",
            "UExBWUVSU1RBVFVTEhMKD1BMQVlFUl9OT1BSRVBBUhAAEhEKDVBMQVlFUl9Q",
            "UkVQQVIQASIrCg1DU19SRVFfUkVHSVNUEgoKAmlkGAEgAigJEg4KBnBhc3N3",
            "ZBgCIAIoCSJ7Cg1DU19SRVNfUkVHSVNUEjIKBnJlc3VsdBgBIAIoDjIiLmNz",
            "bXNnLkNTX1JFU19SRUdJU1QuUmVnaXN0X1Jlc3VsdCI2Cg1SZWdpc3RfUmVz",
            "dWx0EgcKA1N1YxAAEgoKBlJlcGVhdBABEhAKDFN5c3RlbV9FcnJvchACIioK",
            "DENTX1JFUV9MT0dJThIKCgJpZBgBIAIoCRIOCgZwYXNzd2QYAiACKAkiowEK",
            "DENTX1JFU19MT0dJThIwCgZyZXN1bHQYASACKA4yIC5jc21zZy5DU19SRVNf",
            "TE9HSU4uTG9naW5fUmVzdWx0ImEKDExvZ2luX1Jlc3VsdBIHCgNTdWMQABIQ",
            "CgxQYXNzd2RfRXJyb3IQARINCglVaWRfRXJyb3IQAhIVChFPbmxpbmVfRnVs",
            "bF9FcnJvchADEhAKDFN5c3RlbV9FcnJvchAEIh0KD0NTX1JFUV9MT0dJTk9V",
            "VBIKCgJpZBgBIAIoCSJ3Cg9DU19SRVNfTE9HSU5PVVQSNgoGcmVzdWx0GAEg",
            "AigOMiYuY3Ntc2cuQ1NfUkVTX0xPR0lOT1VULkxvZ2lub3V0X1Jlc3VsdCIs",
            "Cg9Mb2dpbm91dF9SZXN1bHQSBwoDU3VjEAASEAoMU3lzdGVtX0Vycm9yEAEi",
            "mgEKD0NTX05UWV9MT0dJTk9VVBIKCgJpZBgBIAIoCRI2CgZSZWFzb24YAiAC",
            "KA4yJi5jc21zZy5DU19OVFlfTE9HSU5PVVQuTG9naW5vdXRfUmVhc29uIkMK",
            "D0xvZ2lub3V0X1JlYXNvbhIPCgtMb2dpbl9BZ2FpbhAAEg0KCU5vdF9Mb2dp",
            "bhABEhAKDFN5c3RlbV9FcnJvchACIhoKDENTX1JFUV9IRUxMTxIKCgJpZBgB",
            "IAIoCSIfCgxDU19SRVNfSEVMTE8SDwoHdGltZW5vdxgBIAIoAyIkChJDU19S",
            "RVFfQ1JFQVRFX1JPT00SDgoGdXNlcmlkGAEgAigJIqwBChJDU19SRVNfQ1JF",
            "QVRFX1JPT00SNgoGcmVzdWx0GAEgAigOMiYuY3Ntc2cuQ1NfUkVTX0NSRUFU",
            "RV9ST09NLkxvZ2luX1Jlc3VsdBIeCgRyb29tGAIgAigLMhAuY3Ntc2cuUm9v",
            "bV9JbmZvIj4KDExvZ2luX1Jlc3VsdBIHCgNTdWMQABITCg9Sb29tX0Z1bGxf",
            "RXJyb3IQARIQCgxTeXN0ZW1fRXJyb3IQAiIiChBDU19SRVFfUk9PTV9MSVNU",
            "Eg4KBnVzZXJpZBgBIAIoCSKUAQoQQ1NfUkVTX1JPT01fTElTVBIyCgZyZXN1",
            "bHQYASACKA4yIi5jc21zZy5DU19SRVNfUk9PTV9MSVNULlJlc3VsdFR5cGUS",
            "IwoJcm9vbV9saXN0GAIgAygLMhAuY3Ntc2cuUm9vbV9JbmZvIicKClJlc3Vs",
            "dFR5cGUSBwoDU3VjEAASEAoMU3lzdGVtX0Vycm9yEAEiMwoRQ1NfUkVRX0VO",
            "VEVSX1JPT00SDgoGdXNlcmlkGAEgAigJEg4KBnJvb21pZBgCIAIoBSKZAQoR",
            "Q1NfUkVTX0VOVEVSX1JPT00SMwoGcmVzdWx0GAEgAigOMiMuY3Ntc2cuQ1Nf",
            "UkVTX0VOVEVSX1JPT00uUmVzdWx0VHlwZSJPCgpSZXN1bHRUeXBlEgcKA1N1",
            "YxAAEhAKDFJvb21JRF9FcnJvchABEhQKEFJvb21fUGxheWVyX0Z1bGwQAhIQ",
            "CgxTeXN0ZW1fRXJyb3IQAyI4ChZDU19OVFlfUk9PTUlORk9fVVBEQVRFEh4K",
            "BHJvb20YASACKAsyEC5jc21zZy5Sb29tX0luZm8iMgoQQ1NfUkVRX1FVSVRf",
            "Uk9PTRIOCgZ1c2VyaWQYASACKAkSDgoGcm9vbWlkGAIgAigFIpYBChBDU19S",
            "RVNfUVVJVF9ST09NEjIKBnJlc3VsdBgBIAIoDjIiLmNzbXNnLkNTX1JFU19R",
            "VUlUX1JPT00uUmVzdWx0VHlwZSJOCgpSZXN1bHRUeXBlEgcKA1N1YxAAEhMK",
            "D1VzZXJfTm9fSW5fUm9vbRABEhAKDFJvb21JZF9FcnJvchACEhAKDFN5c3Rl",
            "bV9FcnJvchADIkwKD0NTX1JFUV9DSEdfUkFDRRIOCgZ1c2VyaWQYASACKAkS",
            "DgoGcm9vbWlkGAIgAigFEhkKBHJhY2UYAyACKA4yCy5jc21zZy5SQUNFIpQB",
            "Cg9DU19SRVNfQ0hHX1JBQ0USMQoGcmVzdWx0GAEgAigOMiEuY3Ntc2cuQ1Nf",
            "UkVTX0NIR19SQUNFLlJlc3VsdFR5cGUiTgoKUmVzdWx0VHlwZRIHCgNTdWMQ",
            "ABITCg9Vc2VyX05vX0luX1Jvb20QARIQCgxSb29tSWRfRXJyb3IQAhIQCgxT",
            "eXN0ZW1fRXJyb3IQAyL8AwoKQ1NfUkVRX01TRxIbCgVtc2dpZBgBIAIoDjIM",
            "LmNzbXNnLk1TR0lEEi0KDWNzX3JlcV9yZWdpc3QYAiABKAsyFC5jc21zZy5D",
            "U19SRVFfUkVHSVNUSAASKwoMY3NfcmVxX2xvZ2luGAMgASgLMhMuY3Ntc2cu",
            "Q1NfUkVRX0xPR0lOSAASKwoMY3NfcmVxX2hlbGxvGAQgASgLMhMuY3Ntc2cu",
            "Q1NfUkVRX0hFTExPSAASNwoSY3NfcmVxX2NyZWF0ZV9yb29tGAUgASgLMhku",
            "Y3Ntc2cuQ1NfUkVRX0NSRUFURV9ST09NSAASMwoQY3NfcmVxX3Jvb21fbGlz",
            "dBgGIAEoCzIXLmNzbXNnLkNTX1JFUV9ST09NX0xJU1RIABIzChBjc19yZXFf",
            "cXVpdF9yb29tGAcgASgLMhcuY3Ntc2cuQ1NfUkVRX1FVSVRfUk9PTUgAEjEK",
            "D2NzX3JlcV9sb2dpbm91dBgIIAEoCzIWLmNzbXNnLkNTX1JFUV9MT0dJTk9V",
            "VEgAEjUKEWNzX3JlcV9lbnRlcl9yb29tGAkgASgLMhguY3Ntc2cuQ1NfUkVR",
            "X0VOVEVSX1JPT01IABIxCg9jc19yZXFfY2hnX3JhY2UYCiABKAsyFi5jc21z",
            "Zy5DU19SRVFfQ0hHX1JBQ0VIAEIICgZDU19NU0ci8AQKCkNTX1JFU19NU0cS",
            "GwoFbXNnaWQYASACKA4yDC5jc21zZy5NU0dJRBItCg1jc19yZXNfcmVnaXN0",
            "GAIgASgLMhQuY3Ntc2cuQ1NfUkVTX1JFR0lTVEgAEisKDGNzX3Jlc19sb2dp",
            "bhgDIAEoCzITLmNzbXNnLkNTX1JFU19MT0dJTkgAEisKDGNzX3Jlc19oZWxs",
            "bxgEIAEoCzITLmNzbXNnLkNTX1JFU19IRUxMT0gAEjcKEmNzX3Jlc19jcmVh",
            "dGVfcm9vbRgFIAEoCzIZLmNzbXNnLkNTX1JFU19DUkVBVEVfUk9PTUgAEjMK",
            "EGNzX3Jlc19yb29tX2xpc3QYBiABKAsyFy5jc21zZy5DU19SRVNfUk9PTV9M",
            "SVNUSAASMwoQY3NfcmVzX3F1aXRfcm9vbRgHIAEoCzIXLmNzbXNnLkNTX1JF",
            "U19RVUlUX1JPT01IABIxCg9jc19yZXNfbG9naW5vdXQYCCABKAsyFi5jc21z",
            "Zy5DU19SRVNfTE9HSU5PVVRIABIxCg9jc19udHlfbG9naW5vdXQYCSABKAsy",
            "Fi5jc21zZy5DU19OVFlfTE9HSU5PVVRIABI1ChFjc19yZXNfZW50ZXJfcm9v",
            "bRgKIAEoCzIYLmNzbXNnLkNTX1JFU19FTlRFUl9ST09NSAASPwoWY3NfbnR5",
            "X3Jvb21pbmZvX3VwZGF0ZRgLIAEoCzIdLmNzbXNnLkNTX05UWV9ST09NSU5G",
            "T19VUERBVEVIABIxCg9jc19yZXNfY2hnX3JhY2UYDCABKAsyFi5jc21zZy5D",
            "U19SRVNfQ0hHX1JBQ0VIAEIICgZDU19NU0cq7AMKBU1TR0lEEhQKEENTX1JF",
            "UV9SRUdJU1RfSUQQARIUChBDU19SRVNfUkVHSVNUX0lEEAISEwoPQ1NfUkVR",
            "X0xPR0lOX0lEEAMSEwoPQ1NfUkVTX0xPR0lOX0lEEAQSEwoPQ1NfUkVRX0hF",
            "TExPX0lEEAUSEwoPQ1NfUkVTX0hFTExPX0lEEAYSGQoVQ1NfUkVRX0NSRUFU",
            "RV9ST09NX0lEEAcSGQoVQ1NfUkVTX0NSRUFURV9ST09NX0lEEAgSFwoTQ1Nf",
            "UkVRX1JPT01fTElTVF9JRBAJEhcKE0NTX1JFU19ST09NX0xJU1RfSUQQChIX",
            "ChNDU19SRVFfUVVJVF9ST09NX0lEEAsSFwoTQ1NfUkVTX1FVSVRfUk9PTV9J",
            "RBAMEhYKEkNTX1JFUV9MT0dJTk9VVF9JRBANEhYKEkNTX1JFU19MT0dJTk9V",
            "VF9JRBAOEhYKEkNTX05UWV9MT0dJTk9VVF9JRBAQEhgKFENTX1JFUV9FTlRF",
            "Ul9ST09NX0lEEBESGAoUQ1NfUkVTX0VOVEVSX1JPT01fSUQQEhIdChlDU19O",
            "VFlfUk9PTUlORk9fVVBEQVRFX0lEEBQSFgoSQ1NfUkVRX0NIR19SQUNFX0lE",
            "EBUSFgoSQ1NfUkVTX0NIR19SQUNFX0lEEBYqJAoEUkFDRRIICgREZWVyEAAS",
            "CAoEQmVhchABEggKBFdPTEYQAg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Csmsg.MSGID), typeof(global::Csmsg.RACE), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.Room_Info), global::Csmsg.Room_Info.Parser, new[]{ "RoomId", "UserList", "RaceList", "Status", "OnlineList" }, null, new[]{ typeof(global::Csmsg.Room_Info.Types.STATUS), typeof(global::Csmsg.Room_Info.Types.PLAYERSTATUS) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_REGIST), global::Csmsg.CS_REQ_REGIST.Parser, new[]{ "Id", "Passwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_REGIST), global::Csmsg.CS_RES_REGIST.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_REGIST.Types.Regist_Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_LOGIN), global::Csmsg.CS_REQ_LOGIN.Parser, new[]{ "Id", "Passwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_LOGIN), global::Csmsg.CS_RES_LOGIN.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_LOGIN.Types.Login_Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_LOGINOUT), global::Csmsg.CS_REQ_LOGINOUT.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_LOGINOUT), global::Csmsg.CS_RES_LOGINOUT.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_LOGINOUT), global::Csmsg.CS_NTY_LOGINOUT.Parser, new[]{ "Id", "Reason" }, null, new[]{ typeof(global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_HELLO), global::Csmsg.CS_REQ_HELLO.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_HELLO), global::Csmsg.CS_RES_HELLO.Parser, new[]{ "Timenow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_CREATE_ROOM), global::Csmsg.CS_REQ_CREATE_ROOM.Parser, new[]{ "Userid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_CREATE_ROOM), global::Csmsg.CS_RES_CREATE_ROOM.Parser, new[]{ "Result", "Room" }, null, new[]{ typeof(global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_ROOM_LIST), global::Csmsg.CS_REQ_ROOM_LIST.Parser, new[]{ "Userid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_ROOM_LIST), global::Csmsg.CS_RES_ROOM_LIST.Parser, new[]{ "Result", "RoomList" }, null, new[]{ typeof(global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_ENTER_ROOM), global::Csmsg.CS_REQ_ENTER_ROOM.Parser, new[]{ "Userid", "Roomid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_ENTER_ROOM), global::Csmsg.CS_RES_ENTER_ROOM.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_NTY_ROOMINFO_UPDATE), global::Csmsg.CS_NTY_ROOMINFO_UPDATE.Parser, new[]{ "Room" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_QUIT_ROOM), global::Csmsg.CS_REQ_QUIT_ROOM.Parser, new[]{ "Userid", "Roomid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_QUIT_ROOM), global::Csmsg.CS_RES_QUIT_ROOM.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_CHG_RACE), global::Csmsg.CS_REQ_CHG_RACE.Parser, new[]{ "Userid", "Roomid", "Race" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_CHG_RACE), global::Csmsg.CS_RES_CHG_RACE.Parser, new[]{ "Result" }, null, new[]{ typeof(global::Csmsg.CS_RES_CHG_RACE.Types.ResultType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_REQ_MSG), global::Csmsg.CS_REQ_MSG.Parser, new[]{ "Msgid", "CsReqRegist", "CsReqLogin", "CsReqHello", "CsReqCreateRoom", "CsReqRoomList", "CsReqQuitRoom", "CsReqLoginout", "CsReqEnterRoom", "CsReqChgRace" }, new[]{ "CSMSG" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Csmsg.CS_RES_MSG), global::Csmsg.CS_RES_MSG.Parser, new[]{ "Msgid", "CsResRegist", "CsResLogin", "CsResHello", "CsResCreateRoom", "CsResRoomList", "CsResQuitRoom", "CsResLoginout", "CsNtyLoginout", "CsResEnterRoom", "CsNtyRoominfoUpdate", "CsResChgRace" }, new[]{ "CSMSG" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MSGID {
    [pbr::OriginalName("CS_REQ_REGIST_ID")] CsReqRegistId = 1,
    [pbr::OriginalName("CS_RES_REGIST_ID")] CsResRegistId = 2,
    [pbr::OriginalName("CS_REQ_LOGIN_ID")] CsReqLoginId = 3,
    [pbr::OriginalName("CS_RES_LOGIN_ID")] CsResLoginId = 4,
    [pbr::OriginalName("CS_REQ_HELLO_ID")] CsReqHelloId = 5,
    [pbr::OriginalName("CS_RES_HELLO_ID")] CsResHelloId = 6,
    [pbr::OriginalName("CS_REQ_CREATE_ROOM_ID")] CsReqCreateRoomId = 7,
    [pbr::OriginalName("CS_RES_CREATE_ROOM_ID")] CsResCreateRoomId = 8,
    [pbr::OriginalName("CS_REQ_ROOM_LIST_ID")] CsReqRoomListId = 9,
    [pbr::OriginalName("CS_RES_ROOM_LIST_ID")] CsResRoomListId = 10,
    [pbr::OriginalName("CS_REQ_QUIT_ROOM_ID")] CsReqQuitRoomId = 11,
    [pbr::OriginalName("CS_RES_QUIT_ROOM_ID")] CsResQuitRoomId = 12,
    [pbr::OriginalName("CS_REQ_LOGINOUT_ID")] CsReqLoginoutId = 13,
    [pbr::OriginalName("CS_RES_LOGINOUT_ID")] CsResLoginoutId = 14,
    [pbr::OriginalName("CS_NTY_LOGINOUT_ID")] CsNtyLoginoutId = 16,
    [pbr::OriginalName("CS_REQ_ENTER_ROOM_ID")] CsReqEnterRoomId = 17,
    [pbr::OriginalName("CS_RES_ENTER_ROOM_ID")] CsResEnterRoomId = 18,
    [pbr::OriginalName("CS_NTY_ROOMINFO_UPDATE_ID")] CsNtyRoominfoUpdateId = 20,
    [pbr::OriginalName("CS_REQ_CHG_RACE_ID")] CsReqChgRaceId = 21,
    [pbr::OriginalName("CS_RES_CHG_RACE_ID")] CsResChgRaceId = 22,
  }

  public enum RACE {
    [pbr::OriginalName("Deer")] Deer = 0,
    [pbr::OriginalName("Bear")] Bear = 1,
    [pbr::OriginalName("WOLF")] Wolf = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Room_Info : pb::IMessage<Room_Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Room_Info> _parser = new pb::MessageParser<Room_Info>(() => new Room_Info());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Room_Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room_Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room_Info(Room_Info other) : this() {
      _hasBits0 = other._hasBits0;
      roomId_ = other.roomId_;
      userList_ = other.userList_.Clone();
      raceList_ = other.raceList_.Clone();
      status_ = other.status_;
      onlineList_ = other.onlineList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room_Info Clone() {
      return new Room_Info(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private readonly static int RoomIdDefaultValue = 0;

    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { if ((_hasBits0 & 1) != 0) { return roomId_; } else { return RoomIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomId_ = value;
      }
    }
    /// <summary>Gets whether the "room_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoomId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoomId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_userList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> userList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserList {
      get { return userList_; }
    }

    /// <summary>Field number for the "race_list" field.</summary>
    public const int RaceListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Csmsg.RACE> _repeated_raceList_codec
        = pb::FieldCodec.ForEnum(24, x => (int) x, x => (global::Csmsg.RACE) x);
    private readonly pbc::RepeatedField<global::Csmsg.RACE> raceList_ = new pbc::RepeatedField<global::Csmsg.RACE>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Csmsg.RACE> RaceList {
      get { return raceList_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static global::Csmsg.Room_Info.Types.STATUS StatusDefaultValue = global::Csmsg.Room_Info.Types.STATUS.Free;

    private global::Csmsg.Room_Info.Types.STATUS status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.Room_Info.Types.STATUS Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "online_list" field.</summary>
    public const int OnlineListFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_onlineList_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> onlineList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OnlineList {
      get { return onlineList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Room_Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Room_Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if(!userList_.Equals(other.userList_)) return false;
      if(!raceList_.Equals(other.raceList_)) return false;
      if (Status != other.Status) return false;
      if(!onlineList_.Equals(other.onlineList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomId) hash ^= RoomId.GetHashCode();
      hash ^= userList_.GetHashCode();
      hash ^= raceList_.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      hash ^= onlineList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomId) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      userList_.WriteTo(output, _repeated_userList_codec);
      raceList_.WriteTo(output, _repeated_raceList_codec);
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      onlineList_.WriteTo(output, _repeated_onlineList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomId) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      userList_.WriteTo(ref output, _repeated_userList_codec);
      raceList_.WriteTo(ref output, _repeated_raceList_codec);
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      onlineList_.WriteTo(ref output, _repeated_onlineList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      size += userList_.CalculateSize(_repeated_userList_codec);
      size += raceList_.CalculateSize(_repeated_raceList_codec);
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += onlineList_.CalculateSize(_repeated_onlineList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Room_Info other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomId) {
        RoomId = other.RoomId;
      }
      userList_.Add(other.userList_);
      raceList_.Add(other.raceList_);
      if (other.HasStatus) {
        Status = other.Status;
      }
      onlineList_.Add(other.onlineList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            userList_.AddEntriesFrom(input, _repeated_userList_codec);
            break;
          }
          case 26:
          case 24: {
            raceList_.AddEntriesFrom(input, _repeated_raceList_codec);
            break;
          }
          case 32: {
            Status = (global::Csmsg.Room_Info.Types.STATUS) input.ReadEnum();
            break;
          }
          case 42: {
            onlineList_.AddEntriesFrom(input, _repeated_onlineList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            userList_.AddEntriesFrom(ref input, _repeated_userList_codec);
            break;
          }
          case 26:
          case 24: {
            raceList_.AddEntriesFrom(ref input, _repeated_raceList_codec);
            break;
          }
          case 32: {
            Status = (global::Csmsg.Room_Info.Types.STATUS) input.ReadEnum();
            break;
          }
          case 42: {
            onlineList_.AddEntriesFrom(ref input, _repeated_onlineList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Room_Info message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum STATUS {
        [pbr::OriginalName("FREE")] Free = 0,
        [pbr::OriginalName("NORMAL")] Normal = 1,
        [pbr::OriginalName("PREPAR")] Prepar = 2,
        [pbr::OriginalName("PLAY")] Play = 3,
      }

      public enum PLAYERSTATUS {
        [pbr::OriginalName("PLAYER_NOPREPAR")] PlayerNoprepar = 0,
        [pbr::OriginalName("PLAYER_PREPAR")] PlayerPrepar = 1,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_REGIST : pb::IMessage<CS_REQ_REGIST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_REGIST> _parser = new pb::MessageParser<CS_REQ_REGIST>(() => new CS_REQ_REGIST());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_REGIST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_REGIST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_REGIST(CS_REQ_REGIST other) : this() {
      id_ = other.id_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_REGIST Clone() {
      return new CS_REQ_REGIST(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 2;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPasswd() {
      passwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_REGIST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_REGIST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasPasswd) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasPasswd) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasPasswd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_REGIST other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_REGIST : pb::IMessage<CS_RES_REGIST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_REGIST> _parser = new pb::MessageParser<CS_RES_REGIST>(() => new CS_RES_REGIST());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_REGIST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_REGIST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_REGIST(CS_RES_REGIST other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_REGIST Clone() {
      return new CS_RES_REGIST(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_REGIST.Types.Regist_Result ResultDefaultValue = global::Csmsg.CS_RES_REGIST.Types.Regist_Result.Suc;

    private global::Csmsg.CS_RES_REGIST.Types.Regist_Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_REGIST.Types.Regist_Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_REGIST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_REGIST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_REGIST other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_REGIST.Types.Regist_Result) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_REGIST.Types.Regist_Result) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_REGIST message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Regist_Result {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("Repeat")] Repeat = 1,
        [pbr::OriginalName("System_Error")] SystemError = 2,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_LOGIN : pb::IMessage<CS_REQ_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_LOGIN> _parser = new pb::MessageParser<CS_REQ_LOGIN>(() => new CS_REQ_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGIN(CS_REQ_LOGIN other) : this() {
      id_ = other.id_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGIN Clone() {
      return new CS_REQ_LOGIN(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 2;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPasswd() {
      passwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasPasswd) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasPasswd) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasPasswd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_LOGIN : pb::IMessage<CS_RES_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_LOGIN> _parser = new pb::MessageParser<CS_RES_LOGIN>(() => new CS_RES_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGIN(CS_RES_LOGIN other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGIN Clone() {
      return new CS_RES_LOGIN(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_LOGIN.Types.Login_Result ResultDefaultValue = global::Csmsg.CS_RES_LOGIN.Types.Login_Result.Suc;

    private global::Csmsg.CS_RES_LOGIN.Types.Login_Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_LOGIN.Types.Login_Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_LOGIN.Types.Login_Result) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_LOGIN.Types.Login_Result) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_LOGIN message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Login_Result {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("Passwd_Error")] PasswdError = 1,
        [pbr::OriginalName("Uid_Error")] UidError = 2,
        [pbr::OriginalName("Online_Full_Error")] OnlineFullError = 3,
        [pbr::OriginalName("System_Error")] SystemError = 4,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_LOGINOUT : pb::IMessage<CS_REQ_LOGINOUT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_LOGINOUT> _parser = new pb::MessageParser<CS_REQ_LOGINOUT>(() => new CS_REQ_LOGINOUT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_LOGINOUT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGINOUT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGINOUT(CS_REQ_LOGINOUT other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_LOGINOUT Clone() {
      return new CS_REQ_LOGINOUT(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_LOGINOUT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_LOGINOUT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_LOGINOUT other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_LOGINOUT : pb::IMessage<CS_RES_LOGINOUT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_LOGINOUT> _parser = new pb::MessageParser<CS_RES_LOGINOUT>(() => new CS_RES_LOGINOUT());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_LOGINOUT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGINOUT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGINOUT(CS_RES_LOGINOUT other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_LOGINOUT Clone() {
      return new CS_RES_LOGINOUT(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result ResultDefaultValue = global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result.Suc;

    private global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_LOGINOUT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_LOGINOUT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_LOGINOUT other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_LOGINOUT.Types.Loginout_Result) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_LOGINOUT message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Loginout_Result {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("System_Error")] SystemError = 1,
      }

    }
    #endregion

  }

  public sealed partial class CS_NTY_LOGINOUT : pb::IMessage<CS_NTY_LOGINOUT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_NTY_LOGINOUT> _parser = new pb::MessageParser<CS_NTY_LOGINOUT>(() => new CS_NTY_LOGINOUT());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_NTY_LOGINOUT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_LOGINOUT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_LOGINOUT(CS_NTY_LOGINOUT other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_LOGINOUT Clone() {
      return new CS_NTY_LOGINOUT(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "Reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason ReasonDefaultValue = global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason.LoginAgain;

    private global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason Reason {
      get { if ((_hasBits0 & 1) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "Reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_NTY_LOGINOUT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_NTY_LOGINOUT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasReason) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasReason) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_NTY_LOGINOUT other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Reason = (global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Reason = (global::Csmsg.CS_NTY_LOGINOUT.Types.Loginout_Reason) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_NTY_LOGINOUT message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Loginout_Reason {
        [pbr::OriginalName("Login_Again")] LoginAgain = 0,
        [pbr::OriginalName("Not_Login")] NotLogin = 1,
        [pbr::OriginalName("System_Error")] SystemError = 2,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_HELLO : pb::IMessage<CS_REQ_HELLO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_HELLO> _parser = new pb::MessageParser<CS_REQ_HELLO>(() => new CS_REQ_HELLO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_HELLO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_HELLO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_HELLO(CS_REQ_HELLO other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_HELLO Clone() {
      return new CS_REQ_HELLO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_HELLO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_HELLO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_HELLO other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_HELLO : pb::IMessage<CS_RES_HELLO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_HELLO> _parser = new pb::MessageParser<CS_RES_HELLO>(() => new CS_RES_HELLO());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_HELLO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_HELLO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_HELLO(CS_RES_HELLO other) : this() {
      _hasBits0 = other._hasBits0;
      timenow_ = other.timenow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_HELLO Clone() {
      return new CS_RES_HELLO(this);
    }

    /// <summary>Field number for the "timenow" field.</summary>
    public const int TimenowFieldNumber = 1;
    private readonly static long TimenowDefaultValue = 0L;

    private long timenow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timenow {
      get { if ((_hasBits0 & 1) != 0) { return timenow_; } else { return TimenowDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timenow_ = value;
      }
    }
    /// <summary>Gets whether the "timenow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimenow {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timenow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimenow() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_HELLO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_HELLO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timenow != other.Timenow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimenow) hash ^= Timenow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimenow) {
        output.WriteRawTag(8);
        output.WriteInt64(Timenow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimenow) {
        output.WriteRawTag(8);
        output.WriteInt64(Timenow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimenow) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timenow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_HELLO other) {
      if (other == null) {
        return;
      }
      if (other.HasTimenow) {
        Timenow = other.Timenow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timenow = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timenow = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_REQ_CREATE_ROOM : pb::IMessage<CS_REQ_CREATE_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_CREATE_ROOM> _parser = new pb::MessageParser<CS_REQ_CREATE_ROOM>(() => new CS_REQ_CREATE_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_CREATE_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CREATE_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CREATE_ROOM(CS_REQ_CREATE_ROOM other) : this() {
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CREATE_ROOM Clone() {
      return new CS_REQ_CREATE_ROOM(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private readonly static string UseridDefaultValue = "";

    private string userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_ ?? UseridDefaultValue; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserid {
      get { return userid_ != null; }
    }
    /// <summary>Clears the value of the "userid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserid() {
      userid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_CREATE_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_CREATE_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserid) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_CREATE_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasUserid) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_CREATE_ROOM : pb::IMessage<CS_RES_CREATE_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_CREATE_ROOM> _parser = new pb::MessageParser<CS_RES_CREATE_ROOM>(() => new CS_RES_CREATE_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_CREATE_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CREATE_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CREATE_ROOM(CS_RES_CREATE_ROOM other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CREATE_ROOM Clone() {
      return new CS_RES_CREATE_ROOM(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result ResultDefaultValue = global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result.Suc;

    private global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 2;
    private global::Csmsg.Room_Info room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.Room_Info Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_CREATE_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_CREATE_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (room_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (room_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_CREATE_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Csmsg.Room_Info();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (room_ == null) {
              Room = new global::Csmsg.Room_Info();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_CREATE_ROOM.Types.Login_Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (room_ == null) {
              Room = new global::Csmsg.Room_Info();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_CREATE_ROOM message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Login_Result {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("Room_Full_Error")] RoomFullError = 1,
        [pbr::OriginalName("System_Error")] SystemError = 2,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_ROOM_LIST : pb::IMessage<CS_REQ_ROOM_LIST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_ROOM_LIST> _parser = new pb::MessageParser<CS_REQ_ROOM_LIST>(() => new CS_REQ_ROOM_LIST());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_ROOM_LIST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ROOM_LIST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ROOM_LIST(CS_REQ_ROOM_LIST other) : this() {
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ROOM_LIST Clone() {
      return new CS_REQ_ROOM_LIST(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private readonly static string UseridDefaultValue = "";

    private string userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_ ?? UseridDefaultValue; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserid {
      get { return userid_ != null; }
    }
    /// <summary>Clears the value of the "userid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserid() {
      userid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_ROOM_LIST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_ROOM_LIST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserid) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_ROOM_LIST other) {
      if (other == null) {
        return;
      }
      if (other.HasUserid) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_ROOM_LIST : pb::IMessage<CS_RES_ROOM_LIST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_ROOM_LIST> _parser = new pb::MessageParser<CS_RES_ROOM_LIST>(() => new CS_RES_ROOM_LIST());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_ROOM_LIST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ROOM_LIST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ROOM_LIST(CS_RES_ROOM_LIST other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      roomList_ = other.roomList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ROOM_LIST Clone() {
      return new CS_RES_ROOM_LIST(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType ResultDefaultValue = global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType.Suc;

    private global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_list" field.</summary>
    public const int RoomListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Csmsg.Room_Info> _repeated_roomList_codec
        = pb::FieldCodec.ForMessage(18, global::Csmsg.Room_Info.Parser);
    private readonly pbc::RepeatedField<global::Csmsg.Room_Info> roomList_ = new pbc::RepeatedField<global::Csmsg.Room_Info>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Csmsg.Room_Info> RoomList {
      get { return roomList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_ROOM_LIST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_ROOM_LIST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!roomList_.Equals(other.roomList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= roomList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      roomList_.WriteTo(output, _repeated_roomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      roomList_.WriteTo(ref output, _repeated_roomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += roomList_.CalculateSize(_repeated_roomList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_ROOM_LIST other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      roomList_.Add(other.roomList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType) input.ReadEnum();
            break;
          }
          case 18: {
            roomList_.AddEntriesFrom(input, _repeated_roomList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_ROOM_LIST.Types.ResultType) input.ReadEnum();
            break;
          }
          case 18: {
            roomList_.AddEntriesFrom(ref input, _repeated_roomList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_ROOM_LIST message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultType {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("System_Error")] SystemError = 1,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_ENTER_ROOM : pb::IMessage<CS_REQ_ENTER_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_ENTER_ROOM> _parser = new pb::MessageParser<CS_REQ_ENTER_ROOM>(() => new CS_REQ_ENTER_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_ENTER_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ENTER_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ENTER_ROOM(CS_REQ_ENTER_ROOM other) : this() {
      _hasBits0 = other._hasBits0;
      userid_ = other.userid_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_ENTER_ROOM Clone() {
      return new CS_REQ_ENTER_ROOM(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private readonly static string UseridDefaultValue = "";

    private string userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_ ?? UseridDefaultValue; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserid {
      get { return userid_ != null; }
    }
    /// <summary>Clears the value of the "userid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserid() {
      userid_ = null;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_ENTER_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_ENTER_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserid) hash ^= Userid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_ENTER_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasUserid) {
        Userid = other.Userid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_ENTER_ROOM : pb::IMessage<CS_RES_ENTER_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_ENTER_ROOM> _parser = new pb::MessageParser<CS_RES_ENTER_ROOM>(() => new CS_RES_ENTER_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_ENTER_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ENTER_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ENTER_ROOM(CS_RES_ENTER_ROOM other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_ENTER_ROOM Clone() {
      return new CS_RES_ENTER_ROOM(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType ResultDefaultValue = global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType.Suc;

    private global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_ENTER_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_ENTER_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_ENTER_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_ENTER_ROOM.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_ENTER_ROOM message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultType {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("RoomID_Error")] RoomIdError = 1,
        [pbr::OriginalName("Room_Player_Full")] RoomPlayerFull = 2,
        [pbr::OriginalName("System_Error")] SystemError = 3,
      }

    }
    #endregion

  }

  public sealed partial class CS_NTY_ROOMINFO_UPDATE : pb::IMessage<CS_NTY_ROOMINFO_UPDATE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_NTY_ROOMINFO_UPDATE> _parser = new pb::MessageParser<CS_NTY_ROOMINFO_UPDATE>(() => new CS_NTY_ROOMINFO_UPDATE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_NTY_ROOMINFO_UPDATE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_ROOMINFO_UPDATE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_ROOMINFO_UPDATE(CS_NTY_ROOMINFO_UPDATE other) : this() {
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_NTY_ROOMINFO_UPDATE Clone() {
      return new CS_NTY_ROOMINFO_UPDATE(this);
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 1;
    private global::Csmsg.Room_Info room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.Room_Info Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_NTY_ROOMINFO_UPDATE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_NTY_ROOMINFO_UPDATE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_NTY_ROOMINFO_UPDATE other) {
      if (other == null) {
        return;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Csmsg.Room_Info();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (room_ == null) {
              Room = new global::Csmsg.Room_Info();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (room_ == null) {
              Room = new global::Csmsg.Room_Info();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_REQ_QUIT_ROOM : pb::IMessage<CS_REQ_QUIT_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_QUIT_ROOM> _parser = new pb::MessageParser<CS_REQ_QUIT_ROOM>(() => new CS_REQ_QUIT_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_QUIT_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_QUIT_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_QUIT_ROOM(CS_REQ_QUIT_ROOM other) : this() {
      _hasBits0 = other._hasBits0;
      userid_ = other.userid_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_QUIT_ROOM Clone() {
      return new CS_REQ_QUIT_ROOM(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private readonly static string UseridDefaultValue = "";

    private string userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_ ?? UseridDefaultValue; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserid {
      get { return userid_ != null; }
    }
    /// <summary>Clears the value of the "userid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserid() {
      userid_ = null;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_QUIT_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_QUIT_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserid) hash ^= Userid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_QUIT_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasUserid) {
        Userid = other.Userid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_QUIT_ROOM : pb::IMessage<CS_RES_QUIT_ROOM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_QUIT_ROOM> _parser = new pb::MessageParser<CS_RES_QUIT_ROOM>(() => new CS_RES_QUIT_ROOM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_QUIT_ROOM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_QUIT_ROOM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_QUIT_ROOM(CS_RES_QUIT_ROOM other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_QUIT_ROOM Clone() {
      return new CS_RES_QUIT_ROOM(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType ResultDefaultValue = global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType.Suc;

    private global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_QUIT_ROOM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_QUIT_ROOM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_QUIT_ROOM other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_QUIT_ROOM.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_QUIT_ROOM message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultType {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("User_No_In_Room")] UserNoInRoom = 1,
        [pbr::OriginalName("RoomId_Error")] RoomIdError = 2,
        [pbr::OriginalName("System_Error")] SystemError = 3,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_CHG_RACE : pb::IMessage<CS_REQ_CHG_RACE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_CHG_RACE> _parser = new pb::MessageParser<CS_REQ_CHG_RACE>(() => new CS_REQ_CHG_RACE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_CHG_RACE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CHG_RACE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CHG_RACE(CS_REQ_CHG_RACE other) : this() {
      _hasBits0 = other._hasBits0;
      userid_ = other.userid_;
      roomid_ = other.roomid_;
      race_ = other.race_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_CHG_RACE Clone() {
      return new CS_REQ_CHG_RACE(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private readonly static string UseridDefaultValue = "";

    private string userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_ ?? UseridDefaultValue; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserid {
      get { return userid_ != null; }
    }
    /// <summary>Clears the value of the "userid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserid() {
      userid_ = null;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 3;
    private readonly static global::Csmsg.RACE RaceDefaultValue = global::Csmsg.RACE.Deer;

    private global::Csmsg.RACE race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.RACE Race {
      get { if ((_hasBits0 & 2) != 0) { return race_; } else { return RaceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        race_ = value;
      }
    }
    /// <summary>Gets whether the "race" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRace {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "race" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRace() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_CHG_RACE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_CHG_RACE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (Roomid != other.Roomid) return false;
      if (Race != other.Race) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserid) hash ^= Userid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRace) hash ^= Race.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasRace) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Race);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserid) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasRace) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Race);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasRace) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Race);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_CHG_RACE other) {
      if (other == null) {
        return;
      }
      if (other.HasUserid) {
        Userid = other.Userid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRace) {
        Race = other.Race;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Race = (global::Csmsg.RACE) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Race = (global::Csmsg.RACE) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_CHG_RACE : pb::IMessage<CS_RES_CHG_RACE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_CHG_RACE> _parser = new pb::MessageParser<CS_RES_CHG_RACE>(() => new CS_RES_CHG_RACE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_CHG_RACE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CHG_RACE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CHG_RACE(CS_RES_CHG_RACE other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_CHG_RACE Clone() {
      return new CS_RES_CHG_RACE(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Csmsg.CS_RES_CHG_RACE.Types.ResultType ResultDefaultValue = global::Csmsg.CS_RES_CHG_RACE.Types.ResultType.Suc;

    private global::Csmsg.CS_RES_CHG_RACE.Types.ResultType result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_CHG_RACE.Types.ResultType Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_CHG_RACE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_CHG_RACE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_CHG_RACE other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_CHG_RACE.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Csmsg.CS_RES_CHG_RACE.Types.ResultType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CS_RES_CHG_RACE message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultType {
        [pbr::OriginalName("Suc")] Suc = 0,
        [pbr::OriginalName("User_No_In_Room")] UserNoInRoom = 1,
        [pbr::OriginalName("RoomId_Error")] RoomIdError = 2,
        [pbr::OriginalName("System_Error")] SystemError = 3,
      }

    }
    #endregion

  }

  public sealed partial class CS_REQ_MSG : pb::IMessage<CS_REQ_MSG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_REQ_MSG> _parser = new pb::MessageParser<CS_REQ_MSG>(() => new CS_REQ_MSG());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_REQ_MSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_MSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_MSG(CS_REQ_MSG other) : this() {
      _hasBits0 = other._hasBits0;
      msgid_ = other.msgid_;
      switch (other.CSMSGCase) {
        case CSMSGOneofCase.CsReqRegist:
          CsReqRegist = other.CsReqRegist.Clone();
          break;
        case CSMSGOneofCase.CsReqLogin:
          CsReqLogin = other.CsReqLogin.Clone();
          break;
        case CSMSGOneofCase.CsReqHello:
          CsReqHello = other.CsReqHello.Clone();
          break;
        case CSMSGOneofCase.CsReqCreateRoom:
          CsReqCreateRoom = other.CsReqCreateRoom.Clone();
          break;
        case CSMSGOneofCase.CsReqRoomList:
          CsReqRoomList = other.CsReqRoomList.Clone();
          break;
        case CSMSGOneofCase.CsReqQuitRoom:
          CsReqQuitRoom = other.CsReqQuitRoom.Clone();
          break;
        case CSMSGOneofCase.CsReqLoginout:
          CsReqLoginout = other.CsReqLoginout.Clone();
          break;
        case CSMSGOneofCase.CsReqEnterRoom:
          CsReqEnterRoom = other.CsReqEnterRoom.Clone();
          break;
        case CSMSGOneofCase.CsReqChgRace:
          CsReqChgRace = other.CsReqChgRace.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_REQ_MSG Clone() {
      return new CS_REQ_MSG(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private readonly static global::Csmsg.MSGID MsgidDefaultValue = global::Csmsg.MSGID.CsReqRegistId;

    private global::Csmsg.MSGID msgid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.MSGID Msgid {
      get { if ((_hasBits0 & 1) != 0) { return msgid_; } else { return MsgidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgid_ = value;
      }
    }
    /// <summary>Gets whether the "msgid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMsgid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msgid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsgid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cs_req_regist" field.</summary>
    public const int CsReqRegistFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_REGIST CsReqRegist {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqRegist ? (global::Csmsg.CS_REQ_REGIST) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqRegist;
      }
    }

    /// <summary>Field number for the "cs_req_login" field.</summary>
    public const int CsReqLoginFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_LOGIN CsReqLogin {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqLogin ? (global::Csmsg.CS_REQ_LOGIN) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqLogin;
      }
    }

    /// <summary>Field number for the "cs_req_hello" field.</summary>
    public const int CsReqHelloFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_HELLO CsReqHello {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqHello ? (global::Csmsg.CS_REQ_HELLO) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqHello;
      }
    }

    /// <summary>Field number for the "cs_req_create_room" field.</summary>
    public const int CsReqCreateRoomFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_CREATE_ROOM CsReqCreateRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom ? (global::Csmsg.CS_REQ_CREATE_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqCreateRoom;
      }
    }

    /// <summary>Field number for the "cs_req_room_list" field.</summary>
    public const int CsReqRoomListFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_ROOM_LIST CsReqRoomList {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqRoomList ? (global::Csmsg.CS_REQ_ROOM_LIST) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqRoomList;
      }
    }

    /// <summary>Field number for the "cs_req_quit_room" field.</summary>
    public const int CsReqQuitRoomFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_QUIT_ROOM CsReqQuitRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom ? (global::Csmsg.CS_REQ_QUIT_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqQuitRoom;
      }
    }

    /// <summary>Field number for the "cs_req_loginout" field.</summary>
    public const int CsReqLoginoutFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_LOGINOUT CsReqLoginout {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqLoginout ? (global::Csmsg.CS_REQ_LOGINOUT) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqLoginout;
      }
    }

    /// <summary>Field number for the "cs_req_enter_room" field.</summary>
    public const int CsReqEnterRoomFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_ENTER_ROOM CsReqEnterRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom ? (global::Csmsg.CS_REQ_ENTER_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqEnterRoom;
      }
    }

    /// <summary>Field number for the "cs_req_chg_race" field.</summary>
    public const int CsReqChgRaceFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_REQ_CHG_RACE CsReqChgRace {
      get { return cSMSGCase_ == CSMSGOneofCase.CsReqChgRace ? (global::Csmsg.CS_REQ_CHG_RACE) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsReqChgRace;
      }
    }

    private object cSMSG_;
    /// <summary>Enum of possible cases for the "CS_MSG" oneof.</summary>
    public enum CSMSGOneofCase {
      None = 0,
      CsReqRegist = 2,
      CsReqLogin = 3,
      CsReqHello = 4,
      CsReqCreateRoom = 5,
      CsReqRoomList = 6,
      CsReqQuitRoom = 7,
      CsReqLoginout = 8,
      CsReqEnterRoom = 9,
      CsReqChgRace = 10,
    }
    private CSMSGOneofCase cSMSGCase_ = CSMSGOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMSGOneofCase CSMSGCase {
      get { return cSMSGCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCSMSG() {
      cSMSGCase_ = CSMSGOneofCase.None;
      cSMSG_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_REQ_MSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_REQ_MSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if (!object.Equals(CsReqRegist, other.CsReqRegist)) return false;
      if (!object.Equals(CsReqLogin, other.CsReqLogin)) return false;
      if (!object.Equals(CsReqHello, other.CsReqHello)) return false;
      if (!object.Equals(CsReqCreateRoom, other.CsReqCreateRoom)) return false;
      if (!object.Equals(CsReqRoomList, other.CsReqRoomList)) return false;
      if (!object.Equals(CsReqQuitRoom, other.CsReqQuitRoom)) return false;
      if (!object.Equals(CsReqLoginout, other.CsReqLoginout)) return false;
      if (!object.Equals(CsReqEnterRoom, other.CsReqEnterRoom)) return false;
      if (!object.Equals(CsReqChgRace, other.CsReqChgRace)) return false;
      if (CSMSGCase != other.CSMSGCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgid) hash ^= Msgid.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) hash ^= CsReqRegist.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) hash ^= CsReqLogin.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) hash ^= CsReqHello.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) hash ^= CsReqCreateRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) hash ^= CsReqRoomList.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) hash ^= CsReqQuitRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) hash ^= CsReqLoginout.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) hash ^= CsReqEnterRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) hash ^= CsReqChgRace.GetHashCode();
      hash ^= (int) cSMSGCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) {
        output.WriteRawTag(18);
        output.WriteMessage(CsReqRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) {
        output.WriteRawTag(26);
        output.WriteMessage(CsReqLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) {
        output.WriteRawTag(34);
        output.WriteMessage(CsReqHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) {
        output.WriteRawTag(42);
        output.WriteMessage(CsReqCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) {
        output.WriteRawTag(50);
        output.WriteMessage(CsReqRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) {
        output.WriteRawTag(58);
        output.WriteMessage(CsReqQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) {
        output.WriteRawTag(66);
        output.WriteMessage(CsReqLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) {
        output.WriteRawTag(74);
        output.WriteMessage(CsReqEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) {
        output.WriteRawTag(82);
        output.WriteMessage(CsReqChgRace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) {
        output.WriteRawTag(18);
        output.WriteMessage(CsReqRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) {
        output.WriteRawTag(26);
        output.WriteMessage(CsReqLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) {
        output.WriteRawTag(34);
        output.WriteMessage(CsReqHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) {
        output.WriteRawTag(42);
        output.WriteMessage(CsReqCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) {
        output.WriteRawTag(50);
        output.WriteMessage(CsReqRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) {
        output.WriteRawTag(58);
        output.WriteMessage(CsReqQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) {
        output.WriteRawTag(66);
        output.WriteMessage(CsReqLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) {
        output.WriteRawTag(74);
        output.WriteMessage(CsReqEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) {
        output.WriteRawTag(82);
        output.WriteMessage(CsReqChgRace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsReqChgRace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_REQ_MSG other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgid) {
        Msgid = other.Msgid;
      }
      switch (other.CSMSGCase) {
        case CSMSGOneofCase.CsReqRegist:
          if (CsReqRegist == null) {
            CsReqRegist = new global::Csmsg.CS_REQ_REGIST();
          }
          CsReqRegist.MergeFrom(other.CsReqRegist);
          break;
        case CSMSGOneofCase.CsReqLogin:
          if (CsReqLogin == null) {
            CsReqLogin = new global::Csmsg.CS_REQ_LOGIN();
          }
          CsReqLogin.MergeFrom(other.CsReqLogin);
          break;
        case CSMSGOneofCase.CsReqHello:
          if (CsReqHello == null) {
            CsReqHello = new global::Csmsg.CS_REQ_HELLO();
          }
          CsReqHello.MergeFrom(other.CsReqHello);
          break;
        case CSMSGOneofCase.CsReqCreateRoom:
          if (CsReqCreateRoom == null) {
            CsReqCreateRoom = new global::Csmsg.CS_REQ_CREATE_ROOM();
          }
          CsReqCreateRoom.MergeFrom(other.CsReqCreateRoom);
          break;
        case CSMSGOneofCase.CsReqRoomList:
          if (CsReqRoomList == null) {
            CsReqRoomList = new global::Csmsg.CS_REQ_ROOM_LIST();
          }
          CsReqRoomList.MergeFrom(other.CsReqRoomList);
          break;
        case CSMSGOneofCase.CsReqQuitRoom:
          if (CsReqQuitRoom == null) {
            CsReqQuitRoom = new global::Csmsg.CS_REQ_QUIT_ROOM();
          }
          CsReqQuitRoom.MergeFrom(other.CsReqQuitRoom);
          break;
        case CSMSGOneofCase.CsReqLoginout:
          if (CsReqLoginout == null) {
            CsReqLoginout = new global::Csmsg.CS_REQ_LOGINOUT();
          }
          CsReqLoginout.MergeFrom(other.CsReqLoginout);
          break;
        case CSMSGOneofCase.CsReqEnterRoom:
          if (CsReqEnterRoom == null) {
            CsReqEnterRoom = new global::Csmsg.CS_REQ_ENTER_ROOM();
          }
          CsReqEnterRoom.MergeFrom(other.CsReqEnterRoom);
          break;
        case CSMSGOneofCase.CsReqChgRace:
          if (CsReqChgRace == null) {
            CsReqChgRace = new global::Csmsg.CS_REQ_CHG_RACE();
          }
          CsReqChgRace.MergeFrom(other.CsReqChgRace);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Msgid = (global::Csmsg.MSGID) input.ReadEnum();
            break;
          }
          case 18: {
            global::Csmsg.CS_REQ_REGIST subBuilder = new global::Csmsg.CS_REQ_REGIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) {
              subBuilder.MergeFrom(CsReqRegist);
            }
            input.ReadMessage(subBuilder);
            CsReqRegist = subBuilder;
            break;
          }
          case 26: {
            global::Csmsg.CS_REQ_LOGIN subBuilder = new global::Csmsg.CS_REQ_LOGIN();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) {
              subBuilder.MergeFrom(CsReqLogin);
            }
            input.ReadMessage(subBuilder);
            CsReqLogin = subBuilder;
            break;
          }
          case 34: {
            global::Csmsg.CS_REQ_HELLO subBuilder = new global::Csmsg.CS_REQ_HELLO();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) {
              subBuilder.MergeFrom(CsReqHello);
            }
            input.ReadMessage(subBuilder);
            CsReqHello = subBuilder;
            break;
          }
          case 42: {
            global::Csmsg.CS_REQ_CREATE_ROOM subBuilder = new global::Csmsg.CS_REQ_CREATE_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) {
              subBuilder.MergeFrom(CsReqCreateRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqCreateRoom = subBuilder;
            break;
          }
          case 50: {
            global::Csmsg.CS_REQ_ROOM_LIST subBuilder = new global::Csmsg.CS_REQ_ROOM_LIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) {
              subBuilder.MergeFrom(CsReqRoomList);
            }
            input.ReadMessage(subBuilder);
            CsReqRoomList = subBuilder;
            break;
          }
          case 58: {
            global::Csmsg.CS_REQ_QUIT_ROOM subBuilder = new global::Csmsg.CS_REQ_QUIT_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) {
              subBuilder.MergeFrom(CsReqQuitRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqQuitRoom = subBuilder;
            break;
          }
          case 66: {
            global::Csmsg.CS_REQ_LOGINOUT subBuilder = new global::Csmsg.CS_REQ_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) {
              subBuilder.MergeFrom(CsReqLoginout);
            }
            input.ReadMessage(subBuilder);
            CsReqLoginout = subBuilder;
            break;
          }
          case 74: {
            global::Csmsg.CS_REQ_ENTER_ROOM subBuilder = new global::Csmsg.CS_REQ_ENTER_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) {
              subBuilder.MergeFrom(CsReqEnterRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqEnterRoom = subBuilder;
            break;
          }
          case 82: {
            global::Csmsg.CS_REQ_CHG_RACE subBuilder = new global::Csmsg.CS_REQ_CHG_RACE();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) {
              subBuilder.MergeFrom(CsReqChgRace);
            }
            input.ReadMessage(subBuilder);
            CsReqChgRace = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Msgid = (global::Csmsg.MSGID) input.ReadEnum();
            break;
          }
          case 18: {
            global::Csmsg.CS_REQ_REGIST subBuilder = new global::Csmsg.CS_REQ_REGIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRegist) {
              subBuilder.MergeFrom(CsReqRegist);
            }
            input.ReadMessage(subBuilder);
            CsReqRegist = subBuilder;
            break;
          }
          case 26: {
            global::Csmsg.CS_REQ_LOGIN subBuilder = new global::Csmsg.CS_REQ_LOGIN();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLogin) {
              subBuilder.MergeFrom(CsReqLogin);
            }
            input.ReadMessage(subBuilder);
            CsReqLogin = subBuilder;
            break;
          }
          case 34: {
            global::Csmsg.CS_REQ_HELLO subBuilder = new global::Csmsg.CS_REQ_HELLO();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqHello) {
              subBuilder.MergeFrom(CsReqHello);
            }
            input.ReadMessage(subBuilder);
            CsReqHello = subBuilder;
            break;
          }
          case 42: {
            global::Csmsg.CS_REQ_CREATE_ROOM subBuilder = new global::Csmsg.CS_REQ_CREATE_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqCreateRoom) {
              subBuilder.MergeFrom(CsReqCreateRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqCreateRoom = subBuilder;
            break;
          }
          case 50: {
            global::Csmsg.CS_REQ_ROOM_LIST subBuilder = new global::Csmsg.CS_REQ_ROOM_LIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqRoomList) {
              subBuilder.MergeFrom(CsReqRoomList);
            }
            input.ReadMessage(subBuilder);
            CsReqRoomList = subBuilder;
            break;
          }
          case 58: {
            global::Csmsg.CS_REQ_QUIT_ROOM subBuilder = new global::Csmsg.CS_REQ_QUIT_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqQuitRoom) {
              subBuilder.MergeFrom(CsReqQuitRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqQuitRoom = subBuilder;
            break;
          }
          case 66: {
            global::Csmsg.CS_REQ_LOGINOUT subBuilder = new global::Csmsg.CS_REQ_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqLoginout) {
              subBuilder.MergeFrom(CsReqLoginout);
            }
            input.ReadMessage(subBuilder);
            CsReqLoginout = subBuilder;
            break;
          }
          case 74: {
            global::Csmsg.CS_REQ_ENTER_ROOM subBuilder = new global::Csmsg.CS_REQ_ENTER_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqEnterRoom) {
              subBuilder.MergeFrom(CsReqEnterRoom);
            }
            input.ReadMessage(subBuilder);
            CsReqEnterRoom = subBuilder;
            break;
          }
          case 82: {
            global::Csmsg.CS_REQ_CHG_RACE subBuilder = new global::Csmsg.CS_REQ_CHG_RACE();
            if (cSMSGCase_ == CSMSGOneofCase.CsReqChgRace) {
              subBuilder.MergeFrom(CsReqChgRace);
            }
            input.ReadMessage(subBuilder);
            CsReqChgRace = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CS_RES_MSG : pb::IMessage<CS_RES_MSG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CS_RES_MSG> _parser = new pb::MessageParser<CS_RES_MSG>(() => new CS_RES_MSG());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RES_MSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Csmsg.ProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_MSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_MSG(CS_RES_MSG other) : this() {
      _hasBits0 = other._hasBits0;
      msgid_ = other.msgid_;
      switch (other.CSMSGCase) {
        case CSMSGOneofCase.CsResRegist:
          CsResRegist = other.CsResRegist.Clone();
          break;
        case CSMSGOneofCase.CsResLogin:
          CsResLogin = other.CsResLogin.Clone();
          break;
        case CSMSGOneofCase.CsResHello:
          CsResHello = other.CsResHello.Clone();
          break;
        case CSMSGOneofCase.CsResCreateRoom:
          CsResCreateRoom = other.CsResCreateRoom.Clone();
          break;
        case CSMSGOneofCase.CsResRoomList:
          CsResRoomList = other.CsResRoomList.Clone();
          break;
        case CSMSGOneofCase.CsResQuitRoom:
          CsResQuitRoom = other.CsResQuitRoom.Clone();
          break;
        case CSMSGOneofCase.CsResLoginout:
          CsResLoginout = other.CsResLoginout.Clone();
          break;
        case CSMSGOneofCase.CsNtyLoginout:
          CsNtyLoginout = other.CsNtyLoginout.Clone();
          break;
        case CSMSGOneofCase.CsResEnterRoom:
          CsResEnterRoom = other.CsResEnterRoom.Clone();
          break;
        case CSMSGOneofCase.CsNtyRoominfoUpdate:
          CsNtyRoominfoUpdate = other.CsNtyRoominfoUpdate.Clone();
          break;
        case CSMSGOneofCase.CsResChgRace:
          CsResChgRace = other.CsResChgRace.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RES_MSG Clone() {
      return new CS_RES_MSG(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private readonly static global::Csmsg.MSGID MsgidDefaultValue = global::Csmsg.MSGID.CsReqRegistId;

    private global::Csmsg.MSGID msgid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.MSGID Msgid {
      get { if ((_hasBits0 & 1) != 0) { return msgid_; } else { return MsgidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgid_ = value;
      }
    }
    /// <summary>Gets whether the "msgid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMsgid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msgid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsgid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cs_res_regist" field.</summary>
    public const int CsResRegistFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_REGIST CsResRegist {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResRegist ? (global::Csmsg.CS_RES_REGIST) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResRegist;
      }
    }

    /// <summary>Field number for the "cs_res_login" field.</summary>
    public const int CsResLoginFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_LOGIN CsResLogin {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResLogin ? (global::Csmsg.CS_RES_LOGIN) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResLogin;
      }
    }

    /// <summary>Field number for the "cs_res_hello" field.</summary>
    public const int CsResHelloFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_HELLO CsResHello {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResHello ? (global::Csmsg.CS_RES_HELLO) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResHello;
      }
    }

    /// <summary>Field number for the "cs_res_create_room" field.</summary>
    public const int CsResCreateRoomFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_CREATE_ROOM CsResCreateRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom ? (global::Csmsg.CS_RES_CREATE_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResCreateRoom;
      }
    }

    /// <summary>Field number for the "cs_res_room_list" field.</summary>
    public const int CsResRoomListFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_ROOM_LIST CsResRoomList {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResRoomList ? (global::Csmsg.CS_RES_ROOM_LIST) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResRoomList;
      }
    }

    /// <summary>Field number for the "cs_res_quit_room" field.</summary>
    public const int CsResQuitRoomFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_QUIT_ROOM CsResQuitRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom ? (global::Csmsg.CS_RES_QUIT_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResQuitRoom;
      }
    }

    /// <summary>Field number for the "cs_res_loginout" field.</summary>
    public const int CsResLoginoutFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_LOGINOUT CsResLoginout {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResLoginout ? (global::Csmsg.CS_RES_LOGINOUT) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResLoginout;
      }
    }

    /// <summary>Field number for the "cs_nty_loginout" field.</summary>
    public const int CsNtyLoginoutFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_NTY_LOGINOUT CsNtyLoginout {
      get { return cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout ? (global::Csmsg.CS_NTY_LOGINOUT) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyLoginout;
      }
    }

    /// <summary>Field number for the "cs_res_enter_room" field.</summary>
    public const int CsResEnterRoomFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_ENTER_ROOM CsResEnterRoom {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom ? (global::Csmsg.CS_RES_ENTER_ROOM) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResEnterRoom;
      }
    }

    /// <summary>Field number for the "cs_nty_roominfo_update" field.</summary>
    public const int CsNtyRoominfoUpdateFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_NTY_ROOMINFO_UPDATE CsNtyRoominfoUpdate {
      get { return cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate ? (global::Csmsg.CS_NTY_ROOMINFO_UPDATE) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsNtyRoominfoUpdate;
      }
    }

    /// <summary>Field number for the "cs_res_chg_race" field.</summary>
    public const int CsResChgRaceFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csmsg.CS_RES_CHG_RACE CsResChgRace {
      get { return cSMSGCase_ == CSMSGOneofCase.CsResChgRace ? (global::Csmsg.CS_RES_CHG_RACE) cSMSG_ : null; }
      set {
        cSMSG_ = value;
        cSMSGCase_ = value == null ? CSMSGOneofCase.None : CSMSGOneofCase.CsResChgRace;
      }
    }

    private object cSMSG_;
    /// <summary>Enum of possible cases for the "CS_MSG" oneof.</summary>
    public enum CSMSGOneofCase {
      None = 0,
      CsResRegist = 2,
      CsResLogin = 3,
      CsResHello = 4,
      CsResCreateRoom = 5,
      CsResRoomList = 6,
      CsResQuitRoom = 7,
      CsResLoginout = 8,
      CsNtyLoginout = 9,
      CsResEnterRoom = 10,
      CsNtyRoominfoUpdate = 11,
      CsResChgRace = 12,
    }
    private CSMSGOneofCase cSMSGCase_ = CSMSGOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMSGOneofCase CSMSGCase {
      get { return cSMSGCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCSMSG() {
      cSMSGCase_ = CSMSGOneofCase.None;
      cSMSG_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RES_MSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RES_MSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if (!object.Equals(CsResRegist, other.CsResRegist)) return false;
      if (!object.Equals(CsResLogin, other.CsResLogin)) return false;
      if (!object.Equals(CsResHello, other.CsResHello)) return false;
      if (!object.Equals(CsResCreateRoom, other.CsResCreateRoom)) return false;
      if (!object.Equals(CsResRoomList, other.CsResRoomList)) return false;
      if (!object.Equals(CsResQuitRoom, other.CsResQuitRoom)) return false;
      if (!object.Equals(CsResLoginout, other.CsResLoginout)) return false;
      if (!object.Equals(CsNtyLoginout, other.CsNtyLoginout)) return false;
      if (!object.Equals(CsResEnterRoom, other.CsResEnterRoom)) return false;
      if (!object.Equals(CsNtyRoominfoUpdate, other.CsNtyRoominfoUpdate)) return false;
      if (!object.Equals(CsResChgRace, other.CsResChgRace)) return false;
      if (CSMSGCase != other.CSMSGCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgid) hash ^= Msgid.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) hash ^= CsResRegist.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) hash ^= CsResLogin.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResHello) hash ^= CsResHello.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) hash ^= CsResCreateRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) hash ^= CsResRoomList.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) hash ^= CsResQuitRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) hash ^= CsResLoginout.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) hash ^= CsNtyLoginout.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) hash ^= CsResEnterRoom.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) hash ^= CsNtyRoominfoUpdate.GetHashCode();
      if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) hash ^= CsResChgRace.GetHashCode();
      hash ^= (int) cSMSGCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) {
        output.WriteRawTag(18);
        output.WriteMessage(CsResRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) {
        output.WriteRawTag(26);
        output.WriteMessage(CsResLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResHello) {
        output.WriteRawTag(34);
        output.WriteMessage(CsResHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) {
        output.WriteRawTag(42);
        output.WriteMessage(CsResCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) {
        output.WriteRawTag(50);
        output.WriteMessage(CsResRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) {
        output.WriteRawTag(58);
        output.WriteMessage(CsResQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) {
        output.WriteRawTag(66);
        output.WriteMessage(CsResLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) {
        output.WriteRawTag(74);
        output.WriteMessage(CsNtyLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) {
        output.WriteRawTag(82);
        output.WriteMessage(CsResEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) {
        output.WriteRawTag(90);
        output.WriteMessage(CsNtyRoominfoUpdate);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) {
        output.WriteRawTag(98);
        output.WriteMessage(CsResChgRace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) {
        output.WriteRawTag(18);
        output.WriteMessage(CsResRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) {
        output.WriteRawTag(26);
        output.WriteMessage(CsResLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResHello) {
        output.WriteRawTag(34);
        output.WriteMessage(CsResHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) {
        output.WriteRawTag(42);
        output.WriteMessage(CsResCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) {
        output.WriteRawTag(50);
        output.WriteMessage(CsResRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) {
        output.WriteRawTag(58);
        output.WriteMessage(CsResQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) {
        output.WriteRawTag(66);
        output.WriteMessage(CsResLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) {
        output.WriteRawTag(74);
        output.WriteMessage(CsNtyLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) {
        output.WriteRawTag(82);
        output.WriteMessage(CsResEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) {
        output.WriteRawTag(90);
        output.WriteMessage(CsNtyRoominfoUpdate);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) {
        output.WriteRawTag(98);
        output.WriteMessage(CsResChgRace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResRegist);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResLogin);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResHello) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResHello);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResCreateRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResRoomList);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResQuitRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyLoginout);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResEnterRoom);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsNtyRoominfoUpdate);
      }
      if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CsResChgRace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RES_MSG other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgid) {
        Msgid = other.Msgid;
      }
      switch (other.CSMSGCase) {
        case CSMSGOneofCase.CsResRegist:
          if (CsResRegist == null) {
            CsResRegist = new global::Csmsg.CS_RES_REGIST();
          }
          CsResRegist.MergeFrom(other.CsResRegist);
          break;
        case CSMSGOneofCase.CsResLogin:
          if (CsResLogin == null) {
            CsResLogin = new global::Csmsg.CS_RES_LOGIN();
          }
          CsResLogin.MergeFrom(other.CsResLogin);
          break;
        case CSMSGOneofCase.CsResHello:
          if (CsResHello == null) {
            CsResHello = new global::Csmsg.CS_RES_HELLO();
          }
          CsResHello.MergeFrom(other.CsResHello);
          break;
        case CSMSGOneofCase.CsResCreateRoom:
          if (CsResCreateRoom == null) {
            CsResCreateRoom = new global::Csmsg.CS_RES_CREATE_ROOM();
          }
          CsResCreateRoom.MergeFrom(other.CsResCreateRoom);
          break;
        case CSMSGOneofCase.CsResRoomList:
          if (CsResRoomList == null) {
            CsResRoomList = new global::Csmsg.CS_RES_ROOM_LIST();
          }
          CsResRoomList.MergeFrom(other.CsResRoomList);
          break;
        case CSMSGOneofCase.CsResQuitRoom:
          if (CsResQuitRoom == null) {
            CsResQuitRoom = new global::Csmsg.CS_RES_QUIT_ROOM();
          }
          CsResQuitRoom.MergeFrom(other.CsResQuitRoom);
          break;
        case CSMSGOneofCase.CsResLoginout:
          if (CsResLoginout == null) {
            CsResLoginout = new global::Csmsg.CS_RES_LOGINOUT();
          }
          CsResLoginout.MergeFrom(other.CsResLoginout);
          break;
        case CSMSGOneofCase.CsNtyLoginout:
          if (CsNtyLoginout == null) {
            CsNtyLoginout = new global::Csmsg.CS_NTY_LOGINOUT();
          }
          CsNtyLoginout.MergeFrom(other.CsNtyLoginout);
          break;
        case CSMSGOneofCase.CsResEnterRoom:
          if (CsResEnterRoom == null) {
            CsResEnterRoom = new global::Csmsg.CS_RES_ENTER_ROOM();
          }
          CsResEnterRoom.MergeFrom(other.CsResEnterRoom);
          break;
        case CSMSGOneofCase.CsNtyRoominfoUpdate:
          if (CsNtyRoominfoUpdate == null) {
            CsNtyRoominfoUpdate = new global::Csmsg.CS_NTY_ROOMINFO_UPDATE();
          }
          CsNtyRoominfoUpdate.MergeFrom(other.CsNtyRoominfoUpdate);
          break;
        case CSMSGOneofCase.CsResChgRace:
          if (CsResChgRace == null) {
            CsResChgRace = new global::Csmsg.CS_RES_CHG_RACE();
          }
          CsResChgRace.MergeFrom(other.CsResChgRace);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Msgid = (global::Csmsg.MSGID) input.ReadEnum();
            break;
          }
          case 18: {
            global::Csmsg.CS_RES_REGIST subBuilder = new global::Csmsg.CS_RES_REGIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) {
              subBuilder.MergeFrom(CsResRegist);
            }
            input.ReadMessage(subBuilder);
            CsResRegist = subBuilder;
            break;
          }
          case 26: {
            global::Csmsg.CS_RES_LOGIN subBuilder = new global::Csmsg.CS_RES_LOGIN();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) {
              subBuilder.MergeFrom(CsResLogin);
            }
            input.ReadMessage(subBuilder);
            CsResLogin = subBuilder;
            break;
          }
          case 34: {
            global::Csmsg.CS_RES_HELLO subBuilder = new global::Csmsg.CS_RES_HELLO();
            if (cSMSGCase_ == CSMSGOneofCase.CsResHello) {
              subBuilder.MergeFrom(CsResHello);
            }
            input.ReadMessage(subBuilder);
            CsResHello = subBuilder;
            break;
          }
          case 42: {
            global::Csmsg.CS_RES_CREATE_ROOM subBuilder = new global::Csmsg.CS_RES_CREATE_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) {
              subBuilder.MergeFrom(CsResCreateRoom);
            }
            input.ReadMessage(subBuilder);
            CsResCreateRoom = subBuilder;
            break;
          }
          case 50: {
            global::Csmsg.CS_RES_ROOM_LIST subBuilder = new global::Csmsg.CS_RES_ROOM_LIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) {
              subBuilder.MergeFrom(CsResRoomList);
            }
            input.ReadMessage(subBuilder);
            CsResRoomList = subBuilder;
            break;
          }
          case 58: {
            global::Csmsg.CS_RES_QUIT_ROOM subBuilder = new global::Csmsg.CS_RES_QUIT_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) {
              subBuilder.MergeFrom(CsResQuitRoom);
            }
            input.ReadMessage(subBuilder);
            CsResQuitRoom = subBuilder;
            break;
          }
          case 66: {
            global::Csmsg.CS_RES_LOGINOUT subBuilder = new global::Csmsg.CS_RES_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) {
              subBuilder.MergeFrom(CsResLoginout);
            }
            input.ReadMessage(subBuilder);
            CsResLoginout = subBuilder;
            break;
          }
          case 74: {
            global::Csmsg.CS_NTY_LOGINOUT subBuilder = new global::Csmsg.CS_NTY_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) {
              subBuilder.MergeFrom(CsNtyLoginout);
            }
            input.ReadMessage(subBuilder);
            CsNtyLoginout = subBuilder;
            break;
          }
          case 82: {
            global::Csmsg.CS_RES_ENTER_ROOM subBuilder = new global::Csmsg.CS_RES_ENTER_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) {
              subBuilder.MergeFrom(CsResEnterRoom);
            }
            input.ReadMessage(subBuilder);
            CsResEnterRoom = subBuilder;
            break;
          }
          case 90: {
            global::Csmsg.CS_NTY_ROOMINFO_UPDATE subBuilder = new global::Csmsg.CS_NTY_ROOMINFO_UPDATE();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) {
              subBuilder.MergeFrom(CsNtyRoominfoUpdate);
            }
            input.ReadMessage(subBuilder);
            CsNtyRoominfoUpdate = subBuilder;
            break;
          }
          case 98: {
            global::Csmsg.CS_RES_CHG_RACE subBuilder = new global::Csmsg.CS_RES_CHG_RACE();
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) {
              subBuilder.MergeFrom(CsResChgRace);
            }
            input.ReadMessage(subBuilder);
            CsResChgRace = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Msgid = (global::Csmsg.MSGID) input.ReadEnum();
            break;
          }
          case 18: {
            global::Csmsg.CS_RES_REGIST subBuilder = new global::Csmsg.CS_RES_REGIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsResRegist) {
              subBuilder.MergeFrom(CsResRegist);
            }
            input.ReadMessage(subBuilder);
            CsResRegist = subBuilder;
            break;
          }
          case 26: {
            global::Csmsg.CS_RES_LOGIN subBuilder = new global::Csmsg.CS_RES_LOGIN();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLogin) {
              subBuilder.MergeFrom(CsResLogin);
            }
            input.ReadMessage(subBuilder);
            CsResLogin = subBuilder;
            break;
          }
          case 34: {
            global::Csmsg.CS_RES_HELLO subBuilder = new global::Csmsg.CS_RES_HELLO();
            if (cSMSGCase_ == CSMSGOneofCase.CsResHello) {
              subBuilder.MergeFrom(CsResHello);
            }
            input.ReadMessage(subBuilder);
            CsResHello = subBuilder;
            break;
          }
          case 42: {
            global::Csmsg.CS_RES_CREATE_ROOM subBuilder = new global::Csmsg.CS_RES_CREATE_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResCreateRoom) {
              subBuilder.MergeFrom(CsResCreateRoom);
            }
            input.ReadMessage(subBuilder);
            CsResCreateRoom = subBuilder;
            break;
          }
          case 50: {
            global::Csmsg.CS_RES_ROOM_LIST subBuilder = new global::Csmsg.CS_RES_ROOM_LIST();
            if (cSMSGCase_ == CSMSGOneofCase.CsResRoomList) {
              subBuilder.MergeFrom(CsResRoomList);
            }
            input.ReadMessage(subBuilder);
            CsResRoomList = subBuilder;
            break;
          }
          case 58: {
            global::Csmsg.CS_RES_QUIT_ROOM subBuilder = new global::Csmsg.CS_RES_QUIT_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResQuitRoom) {
              subBuilder.MergeFrom(CsResQuitRoom);
            }
            input.ReadMessage(subBuilder);
            CsResQuitRoom = subBuilder;
            break;
          }
          case 66: {
            global::Csmsg.CS_RES_LOGINOUT subBuilder = new global::Csmsg.CS_RES_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsResLoginout) {
              subBuilder.MergeFrom(CsResLoginout);
            }
            input.ReadMessage(subBuilder);
            CsResLoginout = subBuilder;
            break;
          }
          case 74: {
            global::Csmsg.CS_NTY_LOGINOUT subBuilder = new global::Csmsg.CS_NTY_LOGINOUT();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyLoginout) {
              subBuilder.MergeFrom(CsNtyLoginout);
            }
            input.ReadMessage(subBuilder);
            CsNtyLoginout = subBuilder;
            break;
          }
          case 82: {
            global::Csmsg.CS_RES_ENTER_ROOM subBuilder = new global::Csmsg.CS_RES_ENTER_ROOM();
            if (cSMSGCase_ == CSMSGOneofCase.CsResEnterRoom) {
              subBuilder.MergeFrom(CsResEnterRoom);
            }
            input.ReadMessage(subBuilder);
            CsResEnterRoom = subBuilder;
            break;
          }
          case 90: {
            global::Csmsg.CS_NTY_ROOMINFO_UPDATE subBuilder = new global::Csmsg.CS_NTY_ROOMINFO_UPDATE();
            if (cSMSGCase_ == CSMSGOneofCase.CsNtyRoominfoUpdate) {
              subBuilder.MergeFrom(CsNtyRoominfoUpdate);
            }
            input.ReadMessage(subBuilder);
            CsNtyRoominfoUpdate = subBuilder;
            break;
          }
          case 98: {
            global::Csmsg.CS_RES_CHG_RACE subBuilder = new global::Csmsg.CS_RES_CHG_RACE();
            if (cSMSGCase_ == CSMSGOneofCase.CsResChgRace) {
              subBuilder.MergeFrom(CsResChgRace);
            }
            input.ReadMessage(subBuilder);
            CsResChgRace = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
